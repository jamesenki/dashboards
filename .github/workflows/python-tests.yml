name: Python Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    services:
      postgres:
        image: timescale/timescaledb:latest-pg14
        env:
          POSTGRES_USER: iotsphere
          POSTGRES_PASSWORD: iotsphere
          POSTGRES_DB: iotsphere_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-asyncio
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run tests with pytest
      env:
        DB_TYPE: postgres
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: iotsphere
        DB_PASSWORD: iotsphere
        DB_NAME: iotsphere_test
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        USE_REDIS_CACHE: "True"
        SUPPRESS_DB_CONNECTION_ERRORS: "False"
      run: |
        pytest -v --cov=src --cov-report=xml --cov-report=term

    - name: TDD workflow verification
      run: |
        # Verify TDD phases are properly implemented
        echo "Checking TDD Red phase tests..."
        pytest -v -m tdd_red || true
        echo "Checking TDD Green phase tests..."
        pytest -v -m "tdd_red or tdd_green"
        echo "Checking TDD Refactor phase tests..."
        pytest -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy

    - name: Lint with flake8
      run: |
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Check formatting with black
      run: |
        black --check src

    - name: Check imports with isort
      run: |
        isort --check-only --profile black src

    - name: Type check with mypy
      run: |
        mypy src
