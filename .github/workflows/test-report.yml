name: Run All Tests and Generate Report

on:
  # Run on pushes to main branch
  push:
    branches: [main, master]
  # Run on pull requests
  pull_request:
  # Run every night at midnight UTC
  schedule:
    - cron: '0 0 * * *'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Node dependencies
        run: npm ci

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install test report dependencies
        run: npm install --save-dev glob@8.1.0

      - name: Run all tests and generate report
        run: npm run test:all

      - name: Archive test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-reports/test-report.md

      - name: Comment Test Report on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const reportPath = 'test-reports/test-report.md';

            if (!fs.existsSync(reportPath)) {
              console.log('Test report file not found at ' + reportPath);
              return;
            }

            // Read the report
            const reportContent = fs.readFileSync(reportPath, 'utf8');

            // Post summary comment on PR
            const reportSummary = reportContent.split('## Test Type Breakdown')[0];

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## IoTSphere Test Status Report\n\n${reportSummary}\n\n[View Full Report](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
            });

      - name: Create Job Summary
        run: |
          echo "## IoTSphere Test Status Summary" >> $GITHUB_STEP_SUMMARY
          cat test-reports/test-report.md >> $GITHUB_STEP_SUMMARY
