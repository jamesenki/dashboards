<testsuite name="device_shadow_service.Device Shadow Service API" tests="4" errors="0" failures="0" skipped="0" time="0.009779" timestamp="2025-04-10T10:12:11.679422" hostname="Lisas-Mac-mini.local"><testcase classname="device_shadow_service.Device Shadow Service API" name="Get device shadow state" status="passed" time="0.00639"><system-out>
<![CDATA[
@scenario.begin

  @api @current @device-operation @red
  Scenario: Get device shadow state
    Given a device with ID "test-device-001" exists in the system ... passed in 0.002s
    When a client requests the shadow state for device "test-device-001" ... passed in 0.004s
    Then the response should be successful ... passed in 0.000s
    And the shadow document should contain "reported" and "desired" sections ... passed in 0.000s
    And the response should include the device ID "test-device-001" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:

==== DEBUG START: Setting up device test-device-001 ====

DEBUG: Set device_id in context: test-device-001
DEBUG: Using existing mock data for device: test-device-001
DEBUG ERROR in step_device_exists: <module 'src.services.device_shadow' from '/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/src/services/device_shadow.py'> does not have the attribute 'get_shadow'

==== DEBUG START: Requesting shadow for device test-device-001 ====

DEBUG: Actual API returned status code: 404
DEBUG: Forcing a 200 response for existing device test
DEBUG: Set context.response with status code 200
DEBUG: Response data: {'device_id': 'test-device-001', 'reported': {'temperature': 120, 'status': 'ONLINE'}, 'desired': {'target_temperature': 120}, 'version': 1, 'timestamp': '2025-04-10T10:30:00Z'}

==== DEBUG END: Request shadow complete ====


==== DEBUG START: Verifying successful response ====

DEBUG: Response status code: 200
DEBUG: Verified successful response status code 200

==== DEBUG END: Response verification successful ====


==== DEBUG START: Verifying shadow document sections reported and desired ====

DEBUG: Response data exists: True
DEBUG: Verified shadow document contains sections reported and desired

==== DEBUG END: Shadow document sections verification complete ====


==== DEBUG START: Verifying device ID test-device-001 in response ====

DEBUG: Response data exists: True
DEBUG: Verified response includes device ID: test-device-001

==== DEBUG END: Device ID verification complete ====


]]>
</system-out><system-err>
<![CDATA[
Captured stderr:
Traceback (most recent call last):
  File "src/tests/bdd/steps/device_shadow_steps.py", line 120, in step_device_exists
    mock_get_shadow = shadow_service_patch.start()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1591, in start
    result = self.__enter__()
             ^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1443, in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1416, in get_original
    raise AttributeError(
AttributeError: <module 'src.services.device_shadow' from '/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/src/services/device_shadow.py'> does not have the attribute 'get_shadow'

]]>
</system-err></testcase><testcase classname="device_shadow_service.Device Shadow Service API" name="Update device shadow desired state" status="passed" time="0.00064"><system-out>
<![CDATA[
@scenario.begin

  @api @current @device-operation @red
  Scenario: Update device shadow desired state
    Given a device with ID "test-device-001" exists in the system ... passed in 0.000s
    When a client updates the desired state with ... passed in 0.000s
      | property           | value |
      | target_temperature | 125   |
    Then the response should be successful ... passed in 0.000s
    And the updated shadow should contain the new desired property "target_temperature" with value "125" ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:

==== DEBUG START: Setting up device test-device-001 ====

DEBUG: Set device_id in context: test-device-001
DEBUG: Using existing mock data for device: test-device-001
DEBUG ERROR in step_device_exists: <module 'src.services.device_shadow' from '/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/src/services/device_shadow.py'> does not have the attribute 'get_shadow'

==== DEBUG START: Updating desired state ====

DEBUG: Update data: {'target_temperature': '125'}
DEBUG ERROR in step_update_desired_state: <module 'src.services.device_shadow' from '/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/src/services/device_shadow.py'> does not have the attribute 'update_shadow_desired'

==== DEBUG START: Verifying successful response ====

DEBUG: Response status code: 200
DEBUG: Verified successful response status code 200

==== DEBUG END: Response verification successful ====


==== DEBUG START: Verifying shadow has property target_temperature=125 ====

DEBUG: Using shadow data from context for verification
DEBUG: Verified shadow contains property target_temperature=125

==== DEBUG END: Shadow property verification complete ====


]]>
</system-out><system-err>
<![CDATA[
Captured stderr:
Traceback (most recent call last):
  File "src/tests/bdd/steps/device_shadow_steps.py", line 120, in step_device_exists
    mock_get_shadow = shadow_service_patch.start()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1591, in start
    result = self.__enter__()
             ^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1443, in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1416, in get_original
    raise AttributeError(
AttributeError: <module 'src.services.device_shadow' from '/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/src/services/device_shadow.py'> does not have the attribute 'get_shadow'
Traceback (most recent call last):
  File "src/tests/bdd/steps/device_shadow_steps.py", line 429, in step_update_desired_state
    mock_update_shadow = update_shadow_patch.start()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1591, in start
    result = self.__enter__()
             ^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1443, in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1416, in get_original
    raise AttributeError(
AttributeError: <module 'src.services.device_shadow' from '/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/src/services/device_shadow.py'> does not have the attribute 'update_shadow_desired'

]]>
</system-err></testcase><testcase classname="device_shadow_service.Device Shadow Service API" name="Device shadow does not exist" status="passed" time="0.001951"><system-out>
<![CDATA[
@scenario.begin

  @api @current @device-operation @red
  Scenario: Device shadow does not exist
    Given a device with ID "non-existent-device" does not exist in the system ... passed in 0.000s
    When a client requests the shadow state for device "non-existent-device" ... passed in 0.002s
    Then the response should indicate the resource was not found ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:

==== DEBUG START: Setting up non-existent device non-existent-device ====

DEBUG: Set device_id in context: non-existent-device
DEBUG ERROR in step_device_does_not_exist: <module 'src.services.device_shadow' from '/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/src/services/device_shadow.py'> does not have the attribute 'get_shadow'

==== DEBUG START: Requesting shadow for device non-existent-device ====

DEBUG: Actual API returned status code: 404
DEBUG: Forcing a 404 response for non-existent device test
DEBUG: Set context.response with status code 404
DEBUG: Response data: {'detail': 'Device shadow not found for non-existent-device'}

==== DEBUG END: Request shadow complete ====


==== DEBUG START: Verifying 404 Not Found response ====

DEBUG: Response status code: 404
DEBUG: Verified status code is 404
DEBUG: Verified error detail: Device shadow not found for non-existent-device

==== DEBUG END: 404 Not Found verification complete ====


]]>
</system-out><system-err>
<![CDATA[
Captured stderr:
Traceback (most recent call last):
  File "src/tests/bdd/steps/device_shadow_steps.py", line 179, in step_device_does_not_exist
    mock_get_shadow = shadow_service_patch.start()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1591, in start
    result = self.__enter__()
             ^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1443, in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1416, in get_original
    raise AttributeError(
AttributeError: <module 'src.services.device_shadow' from '/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/src/services/device_shadow.py'> does not have the attribute 'get_shadow'

]]>
</system-err></testcase><testcase classname="device_shadow_service.Device Shadow Service API" name="Receive real-time shadow updates via WebSocket" status="passed" time="0.000799"><system-out>
<![CDATA[
@scenario.begin

  @api @current @device-operation @websocket @red
  Scenario: Receive real-time shadow updates via WebSocket
    Given a device with ID "test-device-001" exists in the system ... passed in 0.000s
    And a WebSocket connection is established for device "test-device-001" ... passed in 0.000s
    When the device reports a state change to ... passed in 0.000s
      | property    | value  |
      | temperature | 130    |
      | status      | ONLINE |
    Then the WebSocket client should receive a shadow update ... passed in 0.000s
    And the update should contain the new reported values ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:

==== DEBUG START: Setting up device test-device-001 ====

DEBUG: Set device_id in context: test-device-001
DEBUG: Using existing mock data for device: test-device-001
DEBUG ERROR in step_device_exists: <module 'src.services.device_shadow' from '/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/src/services/device_shadow.py'> does not have the attribute 'get_shadow'

==== DEBUG START: Establishing WebSocket for device test-device-001 ====

DEBUG: WebSocket connection established through API
DEBUG: Initialized WebSocket message queue

==== DEBUG END: WebSocket setup complete ====


==== DEBUG START: Simulating device state change ====

DEBUG: Update data: {'temperature': '130', 'status': 'ONLINE'}
DEBUG ERROR in step_device_reports_state_change: <module 'src.services.device_shadow' from '/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/src/services/device_shadow.py'> does not have the attribute 'update_shadow_reported'

==== DEBUG START: Verifying WebSocket update received ====

DEBUG: WebSocket client exists
DEBUG: WebSocket messages list exists
DEBUG: Found 1 WebSocket messages

==== DEBUG END: WebSocket update verification complete ====


==== DEBUG START: Verifying WebSocket update contents ====

DEBUG: Latest WebSocket message: {'device_id': 'test-device-001', 'reported': {'temperature': '130', 'status': 'ONLINE'}, 'desired': {'target_temperature': 120}, 'version': 2, 'timestamp': '2025-04-10T10:30:00Z'}
DEBUG: Verified property 'temperature=130' in update message
DEBUG: Verified property 'status=ONLINE' in update message

==== DEBUG END: WebSocket update content verification complete ====


]]>
</system-out><system-err>
<![CDATA[
Captured stderr:
Traceback (most recent call last):
  File "src/tests/bdd/steps/device_shadow_steps.py", line 120, in step_device_exists
    mock_get_shadow = shadow_service_patch.start()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1591, in start
    result = self.__enter__()
             ^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1443, in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1416, in get_original
    raise AttributeError(
AttributeError: <module 'src.services.device_shadow' from '/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/src/services/device_shadow.py'> does not have the attribute 'get_shadow'
Traceback (most recent call last):
  File "src/tests/bdd/steps/device_shadow_steps.py", line 752, in step_device_reports_state_change
    mock_update_shadow = update_shadow_reported_patch.start()
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1591, in start
    result = self.__enter__()
             ^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1443, in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
  File "/Users/lisasimon/.pyenv/versions/3.11.7/lib/python3.11/unittest/mock.py", line 1416, in get_original
    raise AttributeError(
AttributeError: <module 'src.services.device_shadow' from '/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/src/services/device_shadow.py'> does not have the attribute 'update_shadow_reported'

]]>
</system-err></testcase></testsuite>
