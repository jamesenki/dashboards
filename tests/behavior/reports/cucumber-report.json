[
  {
    "description": "  As a facility manager or executive\n  I want data-driven business insights across my device fleet\n  So that I can make informed operational and financial decisions",
    "elements": [
      {
        "description": "",
        "id": "business-intelligence-and-advanced-analytics;view-operational-efficiency-analytics-for-water-heaters",
        "keyword": "Scenario",
        "line": 7,
        "name": "View operational efficiency analytics for water heaters",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 347171582
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 8,
            "name": "a fleet of water heaters with 6 months of operational data",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/operational_analytics.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 1027249
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 9,
            "name": "a user with \"FACILITY_MANAGER\" role views the operational analytics dashboard",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/operational_analytics.steps.js:178"
            },
            "result": {
              "status": "passed",
              "duration": 423583
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "reliabilityMetrics",
                      "Uptime and reliability statistics"
                    ]
                  },
                  {
                    "cells": [
                      "maintenanceEfficiency",
                      "Effectiveness of maintenance activities"
                    ]
                  },
                  {
                    "cells": [
                      "performanceTrends",
                      "Trends in device performance over time"
                    ]
                  },
                  {
                    "cells": [
                      "costBreakdown",
                      "Operational cost analysis"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 10,
            "name": "the analytics dashboard should display:",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/operational_analytics.steps.js:213"
            },
            "result": {
              "status": "passed",
              "duration": 529416
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "the metrics should be based on actual operational data",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/operational_analytics.steps.js:227"
            },
            "result": {
              "status": "passed",
              "duration": 369875
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 16,
            "name": "comparative benchmarks should be provided where available",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/operational_analytics.steps.js:237"
            },
            "result": {
              "status": "passed",
              "duration": 93874
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 24510874
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 6
          },
          {
            "name": "@ai-capability",
            "line": 6
          },
          {
            "name": "@ai-business-intelligence",
            "line": 6
          },
          {
            "name": "@persona-facilityman",
            "line": 6
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "business-intelligence-and-advanced-analytics;generate-roi-report-for-maintenance-activities",
        "keyword": "Scenario",
        "line": 19,
        "name": "Generate ROI report for maintenance activities",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 235650875
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "a water heater with completed maintenance records",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/operational_analytics.steps.js:59"
            },
            "result": {
              "status": "passed",
              "duration": 10472040
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "historical performance data before and after maintenance",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/operational_analytics.steps.js:145"
            },
            "result": {
              "status": "passed",
              "duration": 672957
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "a user with \"FACILITY_MANAGER\" role requests a maintenance ROI report",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/operational_analytics.steps.js:194"
            },
            "result": {
              "status": "passed",
              "duration": 1420499
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "maintenanceCosts",
                      "Total costs of maintenance activities"
                    ]
                  },
                  {
                    "cells": [
                      "performanceImprovement",
                      "Quantified improvement in performance"
                    ]
                  },
                  {
                    "cells": [
                      "energySavings",
                      "Energy savings attributed to maintenance"
                    ]
                  },
                  {
                    "cells": [
                      "lifespanExtension",
                      "Estimated extension of useful life"
                    ]
                  },
                  {
                    "cells": [
                      "downtimeReduction",
                      "Reduction in unplanned downtime"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 23,
            "name": "the system should calculate:",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/operational_analytics.steps.js:245"
            },
            "result": {
              "status": "passed",
              "duration": 4919250
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 29,
            "name": "it should present an overall ROI figure with supporting data",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/operational_analytics.steps.js:262"
            },
            "result": {
              "status": "passed",
              "duration": 223416
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 30,
            "name": "it should include confidence levels for the calculations",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/operational_analytics.steps.js:273"
            },
            "result": {
              "status": "passed",
              "duration": 811625
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 17215874
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 18
          },
          {
            "name": "@ai-capability",
            "line": 18
          },
          {
            "name": "@ai-business-intelligence",
            "line": 18
          },
          {
            "name": "@persona-facilityman",
            "line": 18
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "business-intelligence-and-advanced-analytics;generate-cross-device-fleet-wide-optimization-recommendations",
        "keyword": "Scenario",
        "line": 33,
        "name": "Generate cross-device fleet-wide optimization recommendations",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 256914708
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 34,
            "name": "a diverse fleet of connected devices across multiple facilities",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 42654334
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 35,
            "name": "operational data for all devices",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:110"
            },
            "result": {
              "status": "passed",
              "duration": 103624
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 36,
            "name": "the business intelligence system performs a fleet-wide analysis",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:185"
            },
            "result": {
              "status": "passed",
              "duration": 210084
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 37,
            "name": "it should identify optimization opportunities across device types",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:242"
            },
            "result": {
              "status": "passed",
              "duration": 133957
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 38,
            "name": "it should quantify the potential impact of each opportunity",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:263"
            },
            "result": {
              "status": "passed",
              "duration": 166041
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "financialImpact",
                      "Estimated financial benefit"
                    ]
                  },
                  {
                    "cells": [
                      "implementationEffort",
                      "Resources required to implement"
                    ]
                  },
                  {
                    "cells": [
                      "confidenceLevel",
                      "Statistical confidence in the prediction"
                    ]
                  },
                  {
                    "cells": [
                      "timeToBenefit",
                      "Expected timeframe to realize benefits"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 39,
            "name": "it should prioritize recommendations based on:",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:275"
            },
            "result": {
              "status": "failed",
              "duration": 569000,
              "error_message": "AssertionError: expected { id: 'rec-001', …(7) } to have property 'financialimpact'\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:291:38)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 44,
            "name": "it should provide implementation guidance for top recommendations",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:304"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 12402791
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 32
          },
          {
            "name": "@ai-capability",
            "line": 32
          },
          {
            "name": "@ai-business-intelligence",
            "line": 32
          },
          {
            "name": "@persona-facilityman",
            "line": 32
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "business-intelligence-and-advanced-analytics;ai-driven-operational-scenario-modeling",
        "keyword": "Scenario",
        "line": 47,
        "name": "AI-driven operational scenario modeling",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 241975417
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 48,
            "name": "a facility with operational and financial data",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:119"
            },
            "result": {
              "status": "passed",
              "duration": 111472167
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 49,
            "name": "a user with \"FACILITY_MANAGER\" role conducts a \"what-if\" analysis",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:201"
            },
            "result": {
              "status": "passed",
              "duration": 192250
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "deviceReplacementRate",
                      "15% per year"
                    ]
                  },
                  {
                    "cells": [
                      "energyCosts",
                      "Projected to increase 8% annually"
                    ]
                  },
                  {
                    "cells": [
                      "maintenanceApproach",
                      "Predictive with 80% compliance"
                    ]
                  },
                  {
                    "cells": [
                      "operationalHours",
                      "Extended by 2 hours daily"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 50,
            "name": "selects parameters:",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:210"
            },
            "result": {
              "status": "passed",
              "duration": 242750
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 55,
            "name": "the system should generate a 5-year projection model",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:322"
            },
            "result": {
              "status": "passed",
              "duration": 147082
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "capitalExpenditure",
                      "Projected device replacement costs"
                    ]
                  },
                  {
                    "cells": [
                      "operationalCosts",
                      "Projected operational costs"
                    ]
                  },
                  {
                    "cells": [
                      "reliability",
                      "Expected system reliability metrics"
                    ]
                  },
                  {
                    "cells": [
                      "energyConsumption",
                      "Projected consumption patterns"
                    ]
                  },
                  {
                    "cells": [
                      "totalCostOfOwnership",
                      "Comprehensive TCO analysis"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 56,
            "name": "the model should include:",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:336"
            },
            "result": {
              "status": "passed",
              "duration": 402666
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 62,
            "name": "the model should compare against baseline scenarios",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:355"
            },
            "result": {
              "status": "failed",
              "duration": 258374,
              "error_message": "AssertionError: expected { totalSavings: 620000, …(5) } to have property 'energyDifference'\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:364:47)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 63,
            "name": "sensitivity analysis should be provided for key variables",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/fleet_optimization.steps.js:367"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 10746583
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 46
          },
          {
            "name": "@ai-capability",
            "line": 46
          },
          {
            "name": "@ai-business-intelligence",
            "line": 46
          },
          {
            "name": "@ai-learning",
            "line": 46
          },
          {
            "name": "@persona-facilityman",
            "line": 46
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "business-intelligence-and-advanced-analytics;intelligent-device-fleet-optimization",
        "keyword": "Scenario",
        "line": 66,
        "name": "Intelligent device fleet optimization",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 259511332
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "age",
                      "Range from new to end-of-life"
                    ]
                  },
                  {
                    "cells": [
                      "efficiency",
                      "Range from high to low efficiency"
                    ]
                  },
                  {
                    "cells": [
                      "reliability",
                      "Range from reliable to problematic"
                    ]
                  },
                  {
                    "cells": [
                      "utilization",
                      "Range from high to low usage"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Given ",
            "line": 67,
            "name": "a facility with multiple device types with varying:",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_fleet_optimization.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 32135457
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 72,
            "name": "the AI optimization system analyzes the entire fleet",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_fleet_optimization.steps.js:113"
            },
            "result": {
              "status": "passed",
              "duration": 144249
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 73,
            "name": "it should recommend an optimal device replacement strategy",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_fleet_optimization.steps.js:128"
            },
            "result": {
              "status": "failed",
              "duration": 72040,
              "error_message": "AssertionError: Target cannot be null or undefined.\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/ai_analytics/device_fleet_optimization.steps.js:131:32)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 74,
            "name": "it should suggest device redeployment based on usage patterns",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_fleet_optimization.steps.js:139"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "immediateReplacement",
                      "Devices with negative value retention"
                    ]
                  },
                  {
                    "cells": [
                      "upgrades",
                      "Devices where upgrades exceed replacement"
                    ]
                  },
                  {
                    "cells": [
                      "redeployment",
                      "Devices better suited to different locations"
                    ]
                  },
                  {
                    "cells": [
                      "retention",
                      "Devices performing optimally"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 75,
            "name": "it should identify candidates for:",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_fleet_optimization.steps.js:155"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 80,
            "name": "it should provide a phased implementation plan",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_fleet_optimization.steps.js:175"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 81,
            "name": "it should calculate expected ROI for the overall strategy",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_fleet_optimization.steps.js:195"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 12480250
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 65
          },
          {
            "name": "@ai-capability",
            "line": 65
          },
          {
            "name": "@ai-cross-device",
            "line": 65
          },
          {
            "name": "@ai-learning",
            "line": 65
          },
          {
            "name": "@persona-facilityman",
            "line": 65
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "business-intelligence-and-advanced-analytics;manufacturer-insights-on-device-performance",
        "keyword": "Scenario",
        "line": 84,
        "name": "Manufacturer insights on device performance",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 252338874
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 85,
            "name": "a manufacturer with devices deployed across multiple customers",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/manufacturer_insights.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 1714833
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 86,
            "name": "anonymous performance data from the device fleet",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/manufacturer_insights.steps.js:63"
            },
            "result": {
              "status": "failed",
              "duration": 172082,
              "error_message": "TypeError: this.analyticsEngine.generateAnonymizedPerformanceData is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/ai_analytics/manufacturer_insights.steps.js:65:64)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 87,
            "name": "a user with \"MANUFACTURER\" role views the product analytics",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/manufacturer_insights.steps.js:89"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "fieldPerformance",
                      "How devices perform in real-world settings"
                    ]
                  },
                  {
                    "cells": [
                      "failurePatterns",
                      "Common failure modes and frequencies"
                    ]
                  },
                  {
                    "cells": [
                      "usagePatterns",
                      "How customers typically use the devices"
                    ]
                  },
                  {
                    "cells": [
                      "featureUtilization",
                      "Which features are most/least used"
                    ]
                  },
                  {
                    "cells": [
                      "customerSatisfaction",
                      "Derived satisfaction metrics"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 88,
            "name": "the system should provide insights on:",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/manufacturer_insights.steps.js:121"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 94,
            "name": "all data should be anonymized to protect customer privacy",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/manufacturer_insights.steps.js:138"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 95,
            "name": "insights should be categorized by device model and environment",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/manufacturer_insights.steps.js:155"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 96,
            "name": "product improvement recommendations should be generated",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/manufacturer_insights.steps.js:176"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 30538874
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 83
          },
          {
            "name": "@ai-capability",
            "line": 83
          },
          {
            "name": "@ai-business-intelligence",
            "line": 83
          },
          {
            "name": "@persona-manufacturer",
            "line": 83
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "business-intelligence-and-advanced-analytics",
    "line": 1,
    "keyword": "Feature",
    "name": "Business Intelligence and Advanced Analytics",
    "tags": [],
    "uri": "tests/behavior/features/ai_analytics/business_intelligence.feature"
  },
  {
    "description": "  As an Executive or Business Strategist\n  I want data-driven business insights about market positioning and opportunities\n  So that I can increase revenue and optimize business models",
    "elements": [
      {
        "description": "",
        "id": "ai-driven-business-strategy-and-revenue-generation;identify-new-customer-segments-based-on-device-usage-patterns",
        "keyword": "Scenario",
        "line": 7,
        "name": "Identify new customer segments based on device usage patterns",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 299543667
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 8,
            "name": "data from multiple devices across different customer segments",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/customer_segmentation.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 5929957
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 9,
            "name": "customer demographic and firmographic data",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/customer_segmentation.steps.js:149"
            },
            "result": {
              "status": "passed",
              "duration": 222374
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 10,
            "name": "the business analytics system performs customer segmentation analysis",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/customer_segmentation.steps.js:181"
            },
            "result": {
              "status": "passed",
              "duration": 112167
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 11,
            "name": "it should identify distinct customer segments based on usage patterns",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/customer_segmentation.steps.js:199"
            },
            "result": {
              "status": "failed",
              "duration": 90874,
              "error_message": "AssertionError: Target cannot be null or undefined.\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/ai_analytics/customer_segmentation.steps.js:202:27)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 12,
            "name": "it should quantify the size and value of each segment",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/customer_segmentation.steps.js:216"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 13,
            "name": "it should identify underserved segments with high growth potential",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/customer_segmentation.steps.js:233"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 14,
            "name": "it should provide firmographic profiles of each segment",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/customer_segmentation.steps.js:250"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "it should recommend targeting approaches for high-value segments",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/customer_segmentation.steps.js:266"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 24274334
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 6
          },
          {
            "name": "@ai-capability",
            "line": 6
          },
          {
            "name": "@ai-business-intelligence",
            "line": 6
          },
          {
            "name": "@persona-executive",
            "line": 6
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "ai-driven-business-strategy-and-revenue-generation;generate-sales-optimization-recommendations",
        "keyword": "Scenario",
        "line": 18,
        "name": "Generate sales optimization recommendations",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 252210083
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 19,
            "name": "historical sales data for IoT devices",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/sales_optimization.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 16477499
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 20,
            "name": "customer adoption patterns across different regions",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/sales_optimization.steps.js:139"
            },
            "result": {
              "status": "passed",
              "duration": 218666
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "current sales pipeline information",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/sales_optimization.steps.js:175"
            },
            "result": {
              "status": "passed",
              "duration": 1421458
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "the AI system analyzes sales performance patterns",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/sales_optimization.steps.js:249"
            },
            "result": {
              "status": "passed",
              "duration": 116208
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "it should identify sales process bottlenecks",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/sales_optimization.steps.js:268"
            },
            "result": {
              "status": "failed",
              "duration": 71375,
              "error_message": "AssertionError: Target cannot be null or undefined.\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/ai_analytics/sales_optimization.steps.js:271:28)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "it should recommend optimal sales approaches per customer segment",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/sales_optimization.steps.js:286"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 25,
            "name": "it should generate sales forecasts with confidence intervals",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/sales_optimization.steps.js:308"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 26,
            "name": "it should highlight the most profitable customer acquisition channels",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/sales_optimization.steps.js:336"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 27,
            "name": "it should suggest ways to reduce customer acquisition costs",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/sales_optimization.steps.js:361"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 12871125
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 17
          },
          {
            "name": "@ai-capability",
            "line": 17
          },
          {
            "name": "@ai-business-intelligence",
            "line": 17
          },
          {
            "name": "@persona-executive",
            "line": 17
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "ai-driven-business-strategy-and-revenue-generation;identify-new-business-model-opportunities",
        "keyword": "Scenario",
        "line": 30,
        "name": "Identify new business model opportunities",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 250034166
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 31,
            "name": "device usage and value creation data across industries",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/business_model.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 674709
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 32,
            "name": "current business model configuration",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/business_model.steps.js:159"
            },
            "result": {
              "status": "passed",
              "duration": 73499
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 33,
            "name": "competitor business model information",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/business_model.steps.js:211"
            },
            "result": {
              "status": "passed",
              "duration": 98042
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 34,
            "name": "the business innovation system analyzes value creation patterns",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/business_model.steps.js:295"
            },
            "result": {
              "status": "passed",
              "duration": 67416
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "subscription",
                      "Device-as-a-Service models"
                    ]
                  },
                  {
                    "cells": [
                      "outcomesBased",
                      "Charging based on outcomes, not time"
                    ]
                  },
                  {
                    "cells": [
                      "ecosystem",
                      "Partner ecosystem revenue sharing models"
                    ]
                  },
                  {
                    "cells": [
                      "dataMonetization",
                      "Anonymized data product opportunities"
                    ]
                  },
                  {
                    "cells": [
                      "hybridModels",
                      "Combination of hardware, software, services"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 35,
            "name": "it should identify potential new business models such as:",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/business_model.steps.js:315"
            },
            "result": {
              "status": "failed",
              "duration": 98833,
              "error_message": "AssertionError: Target cannot be null or undefined.\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/ai_analytics/business_model.steps.js:319:28)"
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "revenueEstimate",
                      "Projected annual revenue"
                    ]
                  },
                  {
                    "cells": [
                      "marginImpact",
                      "Impact on profit margins"
                    ]
                  },
                  {
                    "cells": [
                      "implementationTime",
                      "Time required to implement"
                    ]
                  },
                  {
                    "cells": [
                      "riskAssessment",
                      "Risk level and potential challenges"
                    ]
                  },
                  {
                    "cells": [
                      "competitiveEdge",
                      "Advantage over current competitive position"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 41,
            "name": "each model should include:",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/business_model.steps.js:333"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 15066375
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 29
          },
          {
            "name": "@ai-capability",
            "line": 29
          },
          {
            "name": "@ai-business-intelligence",
            "line": 29
          },
          {
            "name": "@persona-productmanager",
            "line": 29
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "ai-driven-business-strategy-and-revenue-generation;generate-targeted-marketing-campaigns-for-specific-segments",
        "keyword": "Scenario",
        "line": 49,
        "name": "Generate targeted marketing campaigns for specific segments",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 281428707
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 50,
            "name": "customer segmentation data",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/marketing_campaign.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 188458
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 51,
            "name": "historical campaign performance data",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/marketing_campaign.steps.js:127"
            },
            "result": {
              "status": "passed",
              "duration": 105416
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 52,
            "name": "product usage patterns by segment",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/marketing_campaign.steps.js:250"
            },
            "result": {
              "status": "passed",
              "duration": 119958
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 53,
            "name": "the marketing optimization system analyzes customer responses",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/marketing_campaign.steps.js:297"
            },
            "result": {
              "status": "passed",
              "duration": 69709
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 54,
            "name": "it should generate segment-specific marketing messaging",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/marketing_campaign.steps.js:317"
            },
            "result": {
              "status": "failed",
              "duration": 84708,
              "error_message": "AssertionError: Target cannot be null or undefined.\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/ai_analytics/marketing_campaign.steps.js:320:28)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 55,
            "name": "it should recommend optimal channel mix by segment",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/marketing_campaign.steps.js:338"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 56,
            "name": "it should predict campaign performance metrics by segment",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/marketing_campaign.steps.js:359"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 57,
            "name": "it should optimize marketing budget allocation across segments",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/marketing_campaign.steps.js:378"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 58,
            "name": "it should identify the highest ROI marketing opportunities",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/marketing_campaign.steps.js:401"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 59,
            "name": "it should generate A/B testing variants for key messages",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 34270209
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 48
          },
          {
            "name": "@ai-capability",
            "line": 48
          },
          {
            "name": "@ai-cross-device",
            "line": 48
          },
          {
            "name": "@persona-marketingmanager",
            "line": 48
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "ai-driven-business-strategy-and-revenue-generation;analyze-competitive-position-and-strategic-opportunities",
        "keyword": "Scenario",
        "line": 62,
        "name": "Analyze competitive position and strategic opportunities",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 249557416
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 63,
            "name": "market data on competitors and their offerings",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/competitive_analysis.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 188791
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 64,
            "name": "customer sentiment data across competing products",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/competitive_analysis.steps.js:177"
            },
            "result": {
              "status": "passed",
              "duration": 89958
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 65,
            "name": "feature comparison data across the product landscape",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/competitive_analysis.steps.js:301"
            },
            "result": {
              "status": "passed",
              "duration": 95375
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 66,
            "name": "the competitive intelligence system analyzes the market position",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/competitive_analysis.steps.js:502"
            },
            "result": {
              "status": "passed",
              "duration": 73082
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 67,
            "name": "it should identify key competitive strengths and vulnerabilities",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/competitive_analysis.steps.js:521"
            },
            "result": {
              "status": "failed",
              "duration": 97000,
              "error_message": "AssertionError: Target cannot be null or undefined.\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/ai_analytics/competitive_analysis.steps.js:524:28)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 68,
            "name": "it should map opportunities for differentiation",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/competitive_analysis.steps.js:556"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 69,
            "name": "it should highlight underserved market needs",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/competitive_analysis.steps.js:574"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 70,
            "name": "it should recommend strategic positioning options",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/competitive_analysis.steps.js:592"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 71,
            "name": "it should quantify potential market share gains for each strategy",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/competitive_analysis.steps.js:611"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 72,
            "name": "it should identify high-value acquisition or partnership targets",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/competitive_analysis.steps.js:640"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 16528250
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 61
          },
          {
            "name": "@ai-capability",
            "line": 61
          },
          {
            "name": "@ai-business-intelligence",
            "line": 61
          },
          {
            "name": "@persona-executive",
            "line": 61
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "ai-driven-business-strategy-and-revenue-generation;suggest-device-repurposing-and-reuse-opportunities",
        "keyword": "Scenario",
        "line": 75,
        "name": "Suggest device repurposing and reuse opportunities",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 316104957
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 76,
            "name": "end-of-life product data and performance history",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_repurposing.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 184832
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 77,
            "name": "secondary market pricing information",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_repurposing.steps.js:124"
            },
            "result": {
              "status": "passed",
              "duration": 111332
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 78,
            "name": "circular economy value chain data",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_repurposing.steps.js:209"
            },
            "result": {
              "status": "passed",
              "duration": 92707
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 79,
            "name": "the sustainability analytics system analyzes device lifecycles",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_repurposing.steps.js:302"
            },
            "result": {
              "status": "passed",
              "duration": 76416
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 80,
            "name": "it should identify high-value repurposing opportunities",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_repurposing.steps.js:320"
            },
            "result": {
              "status": "failed",
              "duration": 100874,
              "error_message": "AssertionError: Target cannot be null or undefined.\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/ai_analytics/device_repurposing.steps.js:323:28)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 81,
            "name": "it should suggest refurbishment strategies for different device conditions",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_repurposing.steps.js:349"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 82,
            "name": "it should calculate the financial value of reclaimed components",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_repurposing.steps.js:373"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 83,
            "name": "it should recommend optimal end-of-life pathways for each device type",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_repurposing.steps.js:400"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 84,
            "name": "it should quantify the sustainability impact of reuse strategies",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_repurposing.steps.js:429"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 85,
            "name": "it should identify potential buyers for repurposed equipment",
            "match": {
              "location": "tests/behavior/step_definitions/ai_analytics/device_repurposing.steps.js:455"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 15856124
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 74
          },
          {
            "name": "@ai-capability",
            "line": 74
          },
          {
            "name": "@ai-learning",
            "line": 74
          },
          {
            "name": "@persona-productmanager",
            "line": 74
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "ai-driven-business-strategy-and-revenue-generation",
    "line": 1,
    "keyword": "Feature",
    "name": "AI-Driven Business Strategy and Revenue Generation",
    "tags": [],
    "uri": "tests/behavior/features/ai_analytics/business_strategy.feature"
  },
  {
    "description": "  As a facility manager\n  I want to monitor water heater operations in real-time\n  So that I can ensure optimal performance and respond to issues quickly",
    "elements": [
      {
        "description": "",
        "id": "water-heater-operations-dashboard;view-list-of-all-water-heaters-with-status-indicators",
        "keyword": "Scenario",
        "line": 7,
        "name": "View list of all water heaters with status indicators",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 264846166
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 8,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 4228500,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 9,
            "name": "I navigate to the water heater dashboard",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:131"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 10,
            "name": "I should see a list of all water heaters in the system",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:171"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 11,
            "name": "each water heater should display its connection status",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:180"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 12,
            "name": "each water heater should indicate if it is simulated",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:188"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 28825707
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 6
          },
          {
            "name": "@device-management",
            "line": 6
          },
          {
            "name": "@device-operation",
            "line": 6
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;filter-water-heaters-by-manufacturer",
        "keyword": "Scenario",
        "line": 15,
        "name": "Filter water heaters by manufacturer",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 266522291
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 16,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 2287333,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 17,
            "name": "the system has water heaters from multiple manufacturers",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:39"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 18,
            "name": "I navigate to the water heater dashboard",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:131"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 19,
            "name": "I filter by manufacturer \"AquaTech\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:135"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 20,
            "name": "I should only see water heaters from \"AquaTech\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:205"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "I should be able to clear the filter to see all water heaters",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:213"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 29431792
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 14
          },
          {
            "name": "@device-operation",
            "line": 14
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;filter-water-heaters-by-connection-status",
        "keyword": "Scenario",
        "line": 24,
        "name": "Filter water heaters by connection status",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 251003374
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 25,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 1859291,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 26,
            "name": "the system has both connected and disconnected water heaters",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:47"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 27,
            "name": "I navigate to the water heater dashboard",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:131"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 28,
            "name": "I filter by connection status \"connected\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:139"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 29,
            "name": "I should only see water heaters with \"connected\" status",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:224"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 30,
            "name": "I should be able to clear the filter to see all water heaters",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:213"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 12763125
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 23
          },
          {
            "name": "@device-operation",
            "line": 23
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;view-dashboard-summary-metrics",
        "keyword": "Scenario",
        "line": 33,
        "name": "View dashboard summary metrics",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 242888875
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 34,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 5561666,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 35,
            "name": "I navigate to the water heater dashboard",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:131"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "Total Devices"
                    ]
                  },
                  {
                    "cells": [
                      "Connected Devices"
                    ]
                  },
                  {
                    "cells": [
                      "Disconnected Devices"
                    ]
                  },
                  {
                    "cells": [
                      "Simulated Devices"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 36,
            "name": "I should see summary metrics including:",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:232"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 20864832
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 32
          },
          {
            "name": "@device-operation",
            "line": 32
          },
          {
            "name": "@cross-device",
            "line": 32
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;view-detailed-device-status-card",
        "keyword": "Scenario",
        "line": 43,
        "name": "View detailed device status card",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 252247624
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 44,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 2153917,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 45,
            "name": "there is a connected water heater with ID \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:55"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 46,
            "name": "I navigate to the water heater dashboard",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:131"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "Device Name"
                    ]
                  },
                  {
                    "cells": [
                      "Manufacturer"
                    ]
                  },
                  {
                    "cells": [
                      "Model"
                    ]
                  },
                  {
                    "cells": [
                      "Current Temperature"
                    ]
                  },
                  {
                    "cells": [
                      "Target Temperature"
                    ]
                  },
                  {
                    "cells": [
                      "Heating Status"
                    ]
                  },
                  {
                    "cells": [
                      "Mode"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 47,
            "name": "each device card should show:",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:246"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 13434208
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 42
          },
          {
            "name": "@device-operation",
            "line": 42
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;access-detailed-device-view-from-dashboard",
        "keyword": "Scenario",
        "line": 57,
        "name": "Access detailed device view from dashboard",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 246924207
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 58,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 2594582,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 59,
            "name": "there is a water heater with ID \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:66"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 60,
            "name": "I navigate to the water heater dashboard",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:131"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 61,
            "name": "I select the water heater with ID \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:143"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 62,
            "name": "I should see the detailed view for water heater \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:289"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 63,
            "name": "the detailed view should show device information",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:296"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 64,
            "name": "the detailed view should show real-time operational status",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:305"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 27964457
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 56
          },
          {
            "name": "@device-operation",
            "line": 56
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;view-telemetry-history-chart-for-a-specific-device",
        "keyword": "Scenario",
        "line": 67,
        "name": "View telemetry history chart for a specific device",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 276661041
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 68,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 3960958,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 69,
            "name": "there is a water heater with ID \"wh-001\" with historical telemetry data",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:77"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 70,
            "name": "I navigate to the detailed view for water heater \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:147"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 71,
            "name": "I select the \"History\" tab",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:152"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 72,
            "name": "I should see a chart displaying historical temperature data",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:312"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 73,
            "name": "I should be able to select different time ranges",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:317"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 74,
            "name": "I should be able to select different metrics to display",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:322"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 20818084
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 66
          },
          {
            "name": "@device-operation",
            "line": 66
          },
          {
            "name": "@telemetry",
            "line": 66
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;view-device-performance-metrics-with-efficiency-rating",
        "keyword": "Scenario",
        "line": 77,
        "name": "View device performance metrics with efficiency rating",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 248454916
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 78,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 1936124,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 79,
            "name": "there is a water heater with ID \"wh-001\" with performance data",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:91"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 80,
            "name": "I navigate to the detailed view for water heater \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:147"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 81,
            "name": "I select the \"Performance\" tab",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:152"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 82,
            "name": "I should see the efficiency rating for the water heater",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:327"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "Energy Consumption"
                    ]
                  },
                  {
                    "cells": [
                      "Water Usage"
                    ]
                  },
                  {
                    "cells": [
                      "Heating Cycles"
                    ]
                  },
                  {
                    "cells": [
                      "Average Temperature"
                    ]
                  },
                  {
                    "cells": [
                      "Recovery Rate"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 83,
            "name": "I should see key performance metrics including:",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:332"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 12662124
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 76
          },
          {
            "name": "@device-operation",
            "line": 76
          },
          {
            "name": "@analytics",
            "line": 76
          },
          {
            "name": "@ai-capability",
            "line": 76
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;change-device-temperature-setpoint",
        "keyword": "Scenario",
        "line": 91,
        "name": "Change device temperature setpoint",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 253501417
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 92,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 7699332,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 93,
            "name": "there is a connected water heater with ID \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:55"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 94,
            "name": "I navigate to the detailed view for water heater \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:147"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 95,
            "name": "I change the temperature setpoint to \"130\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:156"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 96,
            "name": "the system should send a command to set the target temperature to \"130\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:346"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 97,
            "name": "the device should acknowledge the command",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:360"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 15632583
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 90
          },
          {
            "name": "@device-operation",
            "line": 90
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;toggle-device-power-state",
        "keyword": "Scenario",
        "line": 100,
        "name": "Toggle device power state",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 258792999
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 101,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 6731250,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 102,
            "name": "there is a connected water heater with ID \"wh-001\" in \"standby\" mode",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:105"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 103,
            "name": "I navigate to the detailed view for water heater \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:147"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 104,
            "name": "I click the \"Turn On\" button",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:160"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 105,
            "name": "the system should send a power toggle command to the device",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:375"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 106,
            "name": "the device mode should change from \"standby\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:385"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 22849250
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 99
          },
          {
            "name": "@device-operation",
            "line": 99
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;view-anomalies-detected-for-a-device",
        "keyword": "Scenario",
        "line": 109,
        "name": "View anomalies detected for a device",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 251828000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 110,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 2242833,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 111,
            "name": "there is a water heater with ID \"wh-001\" with detected anomalies",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:116"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 112,
            "name": "I navigate to the detailed view for water heater \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:147"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 113,
            "name": "I select the \"Performance\" tab",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:152"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 114,
            "name": "I should see the number of anomalies detected",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:400"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 115,
            "name": "I should be able to view details about the anomalies",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:405"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 11202416
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 108
          },
          {
            "name": "@device-operation",
            "line": 108
          },
          {
            "name": "@anomaly-detection",
            "line": 108
          },
          {
            "name": "@ai-capability",
            "line": 108
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;switch-between-temperature-units",
        "keyword": "Scenario",
        "line": 118,
        "name": "Switch between temperature units",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 252803750
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 119,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 2703999,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 120,
            "name": "there is a water heater with ID \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:66"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 121,
            "name": "I navigate to the detailed view for water heater \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:147"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 122,
            "name": "I toggle the temperature unit",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:166"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 123,
            "name": "the temperature values should be converted to the selected unit",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:414"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 124,
            "name": "the unit indicator should update accordingly",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:429"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 29170916
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 117
          },
          {
            "name": "@device-operation",
            "line": 117
          },
          {
            "name": "@telemetry",
            "line": 117
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;compare-performance-metrics-between-multiple-water-heaters",
        "keyword": "Scenario",
        "line": 127,
        "name": "Compare performance metrics between multiple water heaters",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 266305040
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 128,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 1824041,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 129,
            "name": "there are multiple water heaters with historical data",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 130,
            "name": "I navigate to the water heater dashboard",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:131"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 131,
            "name": "I select multiple devices for comparison",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 132,
            "name": "I should see a comparison view of the selected devices",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 133,
            "name": "I should be able to compare key performance metrics",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 14576499
            }
          }
        ],
        "tags": [
          {
            "name": "@planned",
            "line": 126
          },
          {
            "name": "@cross-device",
            "line": 126
          },
          {
            "name": "@device-operation",
            "line": 126
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;view-predictive-maintenance-recommendations",
        "keyword": "Scenario",
        "line": 136,
        "name": "View predictive maintenance recommendations",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 241406292
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 137,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 2074082,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 138,
            "name": "there is a water heater with ID \"wh-001\" with sufficient operational history",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 139,
            "name": "I navigate to the detailed view for water heater \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:147"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 140,
            "name": "I select the \"Maintenance\" tab",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:152"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 141,
            "name": "I should see predictive maintenance recommendations",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 142,
            "name": "each recommendation should include expected benefits and priority",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 22029042
            }
          }
        ],
        "tags": [
          {
            "name": "@planned",
            "line": 135
          },
          {
            "name": "@predictive",
            "line": 135
          },
          {
            "name": "@ai-capability",
            "line": 135
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "water-heater-operations-dashboard;view-energy-optimization-suggestions-with-roi",
        "keyword": "Scenario",
        "line": 145,
        "name": "View energy optimization suggestions with ROI",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 267227874
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 146,
            "name": "I am logged in as a \"facility_manager\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:29"
            },
            "result": {
              "status": "failed",
              "duration": 2133499,
              "error_message": "page.evaluate: SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document.\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at UtilityScript.evaluate (<anonymous>:236:17)\n    at UtilityScript.<anonymous> (<anonymous>:1:44)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/water_heater_dashboard.steps.js:34:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 147,
            "name": "there is a water heater with ID \"wh-001\" with operational history",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 148,
            "name": "I navigate to the detailed view for water heater \"wh-001\"",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:147"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 149,
            "name": "I select the \"Performance\" tab",
            "match": {
              "location": "tests/behavior/step_definitions/water_heater_dashboard.steps.js:152"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 150,
            "name": "I should see energy optimization suggestions",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 151,
            "name": "each suggestion should include estimated ROI and implementation cost",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 29642459
            }
          }
        ],
        "tags": [
          {
            "name": "@planned",
            "line": 144
          },
          {
            "name": "@business-intelligence",
            "line": 144
          },
          {
            "name": "@ai-capability",
            "line": 144
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "water-heater-operations-dashboard",
    "line": 1,
    "keyword": "Feature",
    "name": "Water Heater Operations Dashboard",
    "tags": [],
    "uri": "tests/behavior/features/dashboard/water_heater_dashboard.feature"
  },
  {
    "description": "  As a Facility Manager\n  I want to register new devices in the system\n  So that I can monitor and manage them through the platform",
    "elements": [
      {
        "description": "",
        "id": "device-registration;register-a-new-water-heater-with-manufacturer-details",
        "keyword": "Scenario",
        "line": 7,
        "name": "Register a new water heater with manufacturer details",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 287626290
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 8,
            "name": "a user with \"FACILITY_MANAGER\" role is authenticated",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 379083
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "name",
                      "Smart Water Heater 001"
                    ]
                  },
                  {
                    "cells": [
                      "type",
                      "water-heater"
                    ]
                  },
                  {
                    "cells": [
                      "manufacturer",
                      "Rheem"
                    ]
                  },
                  {
                    "cells": [
                      "model",
                      "PRO G50-38N"
                    ]
                  },
                  {
                    "cells": [
                      "serialNumber",
                      "WH12345"
                    ]
                  },
                  {
                    "cells": [
                      "tankCapacity",
                      "50"
                    ]
                  },
                  {
                    "cells": [
                      "firmwareVersion",
                      "1.2.0"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 9,
            "name": "they register a new water heater with the following details:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:23"
            },
            "result": {
              "status": "passed",
              "duration": 120540
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 17,
            "name": "the system should confirm successful registration",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:161"
            },
            "result": {
              "status": "passed",
              "duration": 97792
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 18,
            "name": "the water heater should appear in the device registry",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:167"
            },
            "result": {
              "status": "passed",
              "duration": 53292
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 19,
            "name": "the water heater should have the \"TEMPERATURE_CONTROL\" capability",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:175"
            },
            "result": {
              "status": "passed",
              "duration": 99207
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 20,
            "name": "the water heater should have the \"ENERGY_MONITORING\" capability",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:175"
            },
            "result": {
              "status": "passed",
              "duration": 43666
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "the water heater should have the \"WATER_LEVEL\" capability",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:175"
            },
            "result": {
              "status": "passed",
              "duration": 69750
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 21353958
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 6
          },
          {
            "name": "@context-devicemgmt",
            "line": 6
          },
          {
            "name": "@persona-facilityman",
            "line": 6
          },
          {
            "name": "@smoke",
            "line": 6
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-registration;register-a-water-heater-without-all-optional-fields",
        "keyword": "Scenario",
        "line": 24,
        "name": "Register a water heater without all optional fields",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 254894541
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 25,
            "name": "a user with \"FACILITY_MANAGER\" role is authenticated",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 144625
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "type",
                      "water-heater"
                    ]
                  },
                  {
                    "cells": [
                      "manufacturer",
                      "AO Smith"
                    ]
                  },
                  {
                    "cells": [
                      "model",
                      "ProLine XE"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 26,
            "name": "they register a new water heater with minimum required details:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:60"
            },
            "result": {
              "status": "passed",
              "duration": 129499
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 30,
            "name": "the system should confirm successful registration",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:161"
            },
            "result": {
              "status": "passed",
              "duration": 51792
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 31,
            "name": "the water heater should be assigned a default name",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:183"
            },
            "result": {
              "status": "passed",
              "duration": 50999
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 32,
            "name": "the water heater should appear in the device registry",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:167"
            },
            "result": {
              "status": "passed",
              "duration": 37582
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 30340667
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 23
          },
          {
            "name": "@context-devicemgmt",
            "line": 23
          },
          {
            "name": "@persona-facilityman",
            "line": 23
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-registration;attempt-to-register-a-water-heater-with-missing-required-fields",
        "keyword": "Scenario",
        "line": 35,
        "name": "Attempt to register a water heater with missing required fields",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 269401666
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 36,
            "name": "a user with \"FACILITY_MANAGER\" role is authenticated",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 151167
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "name",
                      "Problem Heater"
                    ]
                  },
                  {
                    "cells": [
                      "model",
                      "Unknown"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 37,
            "name": "they attempt to register a new water heater with incomplete details:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:78"
            },
            "result": {
              "status": "passed",
              "duration": 124082
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 40,
            "name": "the system should reject the registration",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:188"
            },
            "result": {
              "status": "failed",
              "duration": 227916,
              "error_message": "AssertionError: expected [] not to be empty\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_management/device_registration.steps.js:189:44)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 41,
            "name": "the system should indicate \"manufacturer is required\" as the reason",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:193"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 42,
            "name": "the water heater should not appear in the device registry",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:202"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 15666583
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 34
          },
          {
            "name": "@context-devicemgmt",
            "line": 34
          },
          {
            "name": "@persona-facilityman",
            "line": 34
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-registration;system-administrator-registers-a-water-heater-for-a-facility",
        "keyword": "Scenario",
        "line": 45,
        "name": "System administrator registers a water heater for a facility",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 283350084
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 46,
            "name": "a user with \"SYSTEM_ADMIN\" role is authenticated",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 213708
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "name",
                      "Building A Heater 1"
                    ]
                  },
                  {
                    "cells": [
                      "type",
                      "water-heater"
                    ]
                  },
                  {
                    "cells": [
                      "manufacturer",
                      "Bradford White"
                    ]
                  },
                  {
                    "cells": [
                      "model",
                      "MI5036FBN"
                    ]
                  },
                  {
                    "cells": [
                      "location",
                      "Basement"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 47,
            "name": "they register a new water heater on behalf of facility \"Building A\":",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:89"
            },
            "result": {
              "status": "passed",
              "duration": 194582
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 53,
            "name": "the system should confirm successful registration",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:161"
            },
            "result": {
              "status": "passed",
              "duration": 53541
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 54,
            "name": "the water heater should be associated with \"Building A\" facility",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:217"
            },
            "result": {
              "status": "passed",
              "duration": 64415
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 55,
            "name": "the water heater should appear in the device registry",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:167"
            },
            "result": {
              "status": "passed",
              "duration": 42500
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 16727957
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 44
          },
          {
            "name": "@context-devicemgmt",
            "line": 44
          },
          {
            "name": "@persona-sysadmin",
            "line": 44
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-registration;register-a-new-vending-machine-with-automatic-capability-detection",
        "keyword": "Scenario",
        "line": 58,
        "name": "Register a new vending machine with automatic capability detection",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 256299290
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 59,
            "name": "a user with \"FACILITY_MANAGER\" role is authenticated",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 141750
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "name",
                      "Lobby Vending"
                    ]
                  },
                  {
                    "cells": [
                      "type",
                      "vending-machine"
                    ]
                  },
                  {
                    "cells": [
                      "manufacturer",
                      "VendCorp"
                    ]
                  },
                  {
                    "cells": [
                      "model",
                      "VC-5000"
                    ]
                  },
                  {
                    "cells": [
                      "protocol",
                      "mqtt"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 60,
            "name": "they register a new device with basic information:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:112"
            },
            "result": {
              "status": "passed",
              "duration": 131125
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 66,
            "name": "the system should detect the device's capabilities",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:222"
            },
            "result": {
              "status": "passed",
              "duration": 75459
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "INVENTORY_MANAGEMENT"
                    ]
                  },
                  {
                    "cells": [
                      "TEMPERATURE_CONTROL"
                    ]
                  },
                  {
                    "cells": [
                      "ENERGY_MONITORING"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 67,
            "name": "assign at least the capabilities:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:230"
            },
            "result": {
              "status": "passed",
              "duration": 114207
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 71,
            "name": "the vending machine should appear in the device registry",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:241"
            },
            "result": {
              "status": "passed",
              "duration": 59500
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 72,
            "name": "the device type should be correctly identified as \"vending-machine\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:250"
            },
            "result": {
              "status": "passed",
              "duration": 35457
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 41375000
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 57
          },
          {
            "name": "@device-agnostic",
            "line": 57
          },
          {
            "name": "@context-devicemgmt",
            "line": 57
          },
          {
            "name": "@persona-facilityman",
            "line": 57
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-registration;register-a-device-with-custom-capabilities",
        "keyword": "Scenario",
        "line": 75,
        "name": "Register a device with custom capabilities",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 283143666
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 76,
            "name": "a user with \"SYSTEM_ADMIN\" role is authenticated",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 144542
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "name",
                      "Smart Robot"
                    ]
                  },
                  {
                    "cells": [
                      "type",
                      "robot"
                    ]
                  },
                  {
                    "cells": [
                      "manufacturer",
                      "RoboTech"
                    ]
                  },
                  {
                    "cells": [
                      "model",
                      "RT-100"
                    ]
                  },
                  {
                    "cells": [
                      "capabilities",
                      "MOBILITY, TEMPERATURE_CONTROL, INVENTORY_MANAGEMENT"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 77,
            "name": "they register a new device with custom capabilities:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:134"
            },
            "result": {
              "status": "passed",
              "duration": 143250
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 83,
            "name": "the system should confirm successful registration",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:161"
            },
            "result": {
              "status": "passed",
              "duration": 182457
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 84,
            "name": "the robot should have exactly the specified capabilities",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:254"
            },
            "result": {
              "status": "failed",
              "duration": 112833,
              "error_message": "TypeError: Cannot read properties of undefined (reading 'capabilities')\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_management/device_registration.steps.js:260:72)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 85,
            "name": "the robot should appear in the device registry",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration.steps.js:268"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 17312958
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 74
          },
          {
            "name": "@device-agnostic",
            "line": 74
          },
          {
            "name": "@context-devicemgmt",
            "line": 74
          },
          {
            "name": "@persona-sysadmin",
            "line": 74
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "device-registration",
    "line": 1,
    "keyword": "Feature",
    "name": "Device Registration",
    "tags": [],
    "uri": "tests/behavior/features/device_management/device_registration.feature"
  },
  {
    "description": "  As an integrator or developer\n  I want to interact with water heaters from any manufacturer using a standard API\n  So that I can build consistent interfaces regardless of underlying device type",
    "elements": [
      {
        "description": "",
        "id": "manufacturer-agnostic-water-heater-api;get-water-heaters-across-multiple-manufacturers",
        "keyword": "Scenario",
        "line": 7,
        "name": "Get water heaters across multiple manufacturers",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 252538999
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "manufacturer",
                      "count"
                    ]
                  },
                  {
                    "cells": [
                      "Rheem",
                      "3"
                    ]
                  },
                  {
                    "cells": [
                      "AO Smith",
                      "2"
                    ]
                  },
                  {
                    "cells": [
                      "Bradford White",
                      "4"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Given ",
            "line": 8,
            "name": "multiple water heaters from different manufacturers are registered:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 531499
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 13,
            "name": "a user sends a GET request to \"/api/manufacturer/water-heaters\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:225"
            },
            "result": {
              "status": "passed",
              "duration": 102124
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 14,
            "name": "the system should return all registered water heaters",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:275"
            },
            "result": {
              "status": "failed",
              "duration": 69790,
              "error_message": "TypeError: Cannot read properties of undefined (reading 'status')\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:279:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "each water heater should have manufacturer information",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:290"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 16,
            "name": "the response should use the standardized data model",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:301"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 17,
            "name": "the response should include pagination information",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:329"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 52019625
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 6
          },
          {
            "name": "@context-devicemgmt",
            "line": 6
          },
          {
            "name": "@persona-bmsintegrator",
            "line": 6
          },
          {
            "name": "@smoke",
            "line": 6
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "manufacturer-agnostic-water-heater-api;filter-water-heaters-by-manufacturer",
        "keyword": "Scenario",
        "line": 20,
        "name": "Filter water heaters by manufacturer",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 292552915
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 21,
            "name": "multiple water heaters from different manufacturers are registered",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration_extensions.steps.js:14"
            },
            "result": {
              "status": "pending",
              "duration": 191416
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 22,
            "name": "a user sends a GET request to \"/api/manufacturer/water-heaters?manufacturer=Rheem\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:225"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 23,
            "name": "the system should return only water heaters from \"Rheem\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:340"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "the response should use the standardized data model",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:301"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 25,
            "name": "the count of returned devices should match the number of registered Rheem devices",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:351"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 29333082
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 19
          },
          {
            "name": "@context-devicemgmt",
            "line": 19
          },
          {
            "name": "@persona-bmsintegrator",
            "line": 19
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "manufacturer-agnostic-water-heater-api;get-individual-water-heater-details-by-id",
        "keyword": "Scenario",
        "line": 28,
        "name": "Get individual water heater details by ID",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 271085417
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 29,
            "name": "a registered water heater with ID \"wh-123\" from manufacturer \"AO Smith\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:60"
            },
            "result": {
              "status": "passed",
              "duration": 243167
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 30,
            "name": "a user sends a GET request to \"/api/manufacturer/water-heaters/wh-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:225"
            },
            "result": {
              "status": "passed",
              "duration": 69000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 31,
            "name": "the system should return the water heater details",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:359"
            },
            "result": {
              "status": "failed",
              "duration": 115708,
              "error_message": "TypeError: Cannot read properties of undefined (reading 'status')\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:363:19)"
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "id",
                      "The unique identifier for the water heater"
                    ]
                  },
                  {
                    "cells": [
                      "manufacturer",
                      "\"AO Smith\""
                    ]
                  },
                  {
                    "cells": [
                      "model",
                      "The water heater model"
                    ]
                  },
                  {
                    "cells": [
                      "serialNumber",
                      "The water heater serial number"
                    ]
                  },
                  {
                    "cells": [
                      "capabilities",
                      "List of device capabilities"
                    ]
                  },
                  {
                    "cells": [
                      "status",
                      "Current operational status"
                    ]
                  },
                  {
                    "cells": [
                      "connectionState",
                      "Current connection state"
                    ]
                  },
                  {
                    "cells": [
                      "currentSettings",
                      "Current operational settings"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 32,
            "name": "the response should include:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:368"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 30076458
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 27
          },
          {
            "name": "@context-devicemgmt",
            "line": 27
          },
          {
            "name": "@persona-bmsintegrator",
            "line": 27
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "manufacturer-agnostic-water-heater-api;get-operational-summary-including-maintenance-predictions",
        "keyword": "Scenario",
        "line": 43,
        "name": "Get operational summary including maintenance predictions",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 300093834
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 44,
            "name": "a registered water heater with ID \"wh-123\" with operational history",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:97"
            },
            "result": {
              "status": "failed",
              "duration": 339208,
              "error_message": "TypeError: this.analyticsEngine.addMaintenancePrediction is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:152:30)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 45,
            "name": "a user sends a GET request to \"/api/manufacturer/water-heaters/wh-123/summary\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:225"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "averageUsage",
                      "Average daily water usage"
                    ]
                  },
                  {
                    "cells": [
                      "energyConsumption",
                      "Energy consumption statistics"
                    ]
                  },
                  {
                    "cells": [
                      "healthScore",
                      "Current health assessment score"
                    ]
                  },
                  {
                    "cells": [
                      "maintenanceNeeded",
                      "Whether maintenance is currently needed"
                    ]
                  },
                  {
                    "cells": [
                      "predictedIssues",
                      "Any predicted upcoming issues"
                    ]
                  },
                  {
                    "cells": [
                      "nextMaintenanceDate",
                      "Recommended next maintenance date"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 46,
            "name": "the system should return an operational summary including:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:387"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 53,
            "name": "the response should follow the standardized format regardless of manufacturer",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:403"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 15262457
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 42
          },
          {
            "name": "@context-devicemgmt",
            "line": 42
          },
          {
            "name": "@context-maintenance",
            "line": 42
          },
          {
            "name": "@persona-bmsintegrator",
            "line": 42
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "manufacturer-agnostic-water-heater-api;update-water-heater-operational-mode",
        "keyword": "Scenario",
        "line": 56,
        "name": "Update water heater operational mode",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 252375416
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 57,
            "name": "a registered water heater with ID \"wh-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/device_registration_extensions.steps.js:73"
            },
            "result": {
              "status": "pending",
              "duration": 147125
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 58,
            "name": "a user sends a PUT request to \"/api/manufacturer/water-heaters/wh-123/mode\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:255"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 59,
            "name": "includes the mode \"ECO\" in the request body",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:259"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 60,
            "name": "the system should translate the request to the manufacturer-specific format",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:424"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 61,
            "name": "the water heater mode should be updated to \"ECO\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:434"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 62,
            "name": "the response should include the updated water heater state",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:444"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 63,
            "name": "the standardized response format should be the same regardless of manufacturer",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:452"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 31341250
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 55
          },
          {
            "name": "@context-deviceop",
            "line": 55
          },
          {
            "name": "@persona-bmsintegrator",
            "line": 55
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "manufacturer-agnostic-water-heater-api;get-list-of-supported-manufacturers",
        "keyword": "Scenario",
        "line": 66,
        "name": "Get list of supported manufacturers",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 249995249
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 67,
            "name": "a user sends a GET request to \"/api/manufacturer/water-heaters/manufacturers\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:225"
            },
            "result": {
              "status": "passed",
              "duration": 135833
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 68,
            "name": "the system should return a list of all supported manufacturers",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:457"
            },
            "result": {
              "status": "failed",
              "duration": 121124,
              "error_message": "TypeError: Cannot read properties of undefined (reading 'status')\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:461:19)"
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "name",
                      "The manufacturer name"
                    ]
                  },
                  {
                    "cells": [
                      "supportedModels",
                      "List of supported model families"
                    ]
                  },
                  {
                    "cells": [
                      "capabilities",
                      "List of supported capabilities"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 69,
            "name": "each manufacturer should include:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:468"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 73,
            "name": "the response should include any recently added manufacturers",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:481"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 30645083
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 65
          },
          {
            "name": "@context-devicemgmt",
            "line": 65
          },
          {
            "name": "@persona-bmsintegrator",
            "line": 65
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "manufacturer-agnostic-water-heater-api;unified-api-across-different-device-types",
        "keyword": "Scenario",
        "line": 76,
        "name": "Unified API across different device types",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 268512624
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "deviceId",
                      "type",
                      "manufacturer"
                    ]
                  },
                  {
                    "cells": [
                      "wh-123",
                      "water-heater",
                      "Rheem"
                    ]
                  },
                  {
                    "cells": [
                      "vm-456",
                      "vending-machine",
                      "VendCorp"
                    ]
                  },
                  {
                    "cells": [
                      "rb-789",
                      "robot",
                      "RoboTech"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Given ",
            "line": 77,
            "name": "the following registered devices:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:164"
            },
            "result": {
              "status": "passed",
              "duration": 265999
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 82,
            "name": "a user sends a GET request to \"/api/devices\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:225"
            },
            "result": {
              "status": "passed",
              "duration": 63832
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 83,
            "name": "the system should return all devices regardless of type",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:494"
            },
            "result": {
              "status": "failed",
              "duration": 70333,
              "error_message": "TypeError: Cannot read properties of undefined (reading 'status')\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:498:19)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 84,
            "name": "each device should use its type-specific data model",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:507"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "id",
                      "The unique identifier for the device"
                    ]
                  },
                  {
                    "cells": [
                      "type",
                      "The device type"
                    ]
                  },
                  {
                    "cells": [
                      "manufacturer",
                      "The device manufacturer"
                    ]
                  },
                  {
                    "cells": [
                      "capabilities",
                      "List of device capabilities"
                    ]
                  },
                  {
                    "cells": [
                      "status",
                      "Current operational status"
                    ]
                  },
                  {
                    "cells": [
                      "connectionState",
                      "Current connection state"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 85,
            "name": "all devices should share common base fields:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:525"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 92,
            "name": "the response should maintain backward compatibility with existing clients",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:538"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 15065292
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 75
          },
          {
            "name": "@device-agnostic",
            "line": 75
          },
          {
            "name": "@context-devicemgmt",
            "line": 75
          },
          {
            "name": "@persona-bmsintegrator",
            "line": 75
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "manufacturer-agnostic-water-heater-api",
    "line": 1,
    "keyword": "Feature",
    "name": "Manufacturer-Agnostic Water Heater API",
    "tags": [],
    "uri": "tests/behavior/features/device_management/manufacturer_agnostic_api.feature"
  },
  {
    "description": "  As a user of the IoTSphere platform\n  I want to send commands to control devices\n  So that I can manage their operation remotely",
    "elements": [
      {
        "description": "",
        "id": "device-command-execution;set-temperature-on-a-water-heater",
        "keyword": "Scenario",
        "line": 7,
        "name": "Set temperature on a water heater",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 300215083
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 8,
            "name": "a registered water heater device with ID \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 164625
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 9,
            "name": "the device has the \"TEMPERATURE_CONTROL\" capability",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 106999
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 10,
            "name": "the device is online",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:35"
            },
            "result": {
              "status": "failed",
              "duration": 75291,
              "error_message": "TypeError: this.deviceRepository.updateDeviceConnectionState is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_operation/command_execution.steps.js:39:31)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 11,
            "name": "a user with \"FACILITY_MANAGER\" role sends a \"setTemperature\" command",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:286"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 12,
            "name": "provides a parameter \"temperature\" with value \"125\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:305"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 13,
            "name": "the system should successfully dispatch the command",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:407"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 14,
            "name": "the command status should be \"SENT\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:415"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "when the command completes",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:421"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 16,
            "name": "the command status should change to \"COMPLETED\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:425"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 17,
            "name": "the device state should reflect the new temperature setting",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:432"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 18,
            "name": "the command execution should be logged",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:443"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 15934790
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 6
          },
          {
            "name": "@context-deviceop",
            "line": 6
          },
          {
            "name": "@persona-facilityman",
            "line": 6
          },
          {
            "name": "@smoke",
            "line": 6
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-command-execution;end-user-changes-operational-mode-on-their-water-heater",
        "keyword": "Scenario",
        "line": 21,
        "name": "End user changes operational mode on their water heater",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 257978749
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 22,
            "name": "an end user with access to device \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:92"
            },
            "result": {
              "status": "failed",
              "duration": 190292,
              "error_message": "TypeError: this.userService.createUser is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:94:39)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 23,
            "name": "the device is online",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:35"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 24,
            "name": "the user sends a \"setMode\" command",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution_extensions.steps.js:14"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 25,
            "name": "selects the \"ECO\" mode",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:325"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 26,
            "name": "the system should successfully dispatch the command",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:407"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 27,
            "name": "the device state should be updated to reflect the new mode",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:455"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 28,
            "name": "the user should receive confirmation of the mode change",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:466"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 29,
            "name": "the expected energy savings should be displayed",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:473"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 23806084
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 20
          },
          {
            "name": "@context-deviceop",
            "line": 20
          },
          {
            "name": "@persona-enduser",
            "line": 20
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-command-execution;attempt-to-send-command-to-an-offline-device",
        "keyword": "Scenario",
        "line": 32,
        "name": "Attempt to send command to an offline device",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 283866666
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "a registered water heater device with ID \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 94709
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 34,
            "name": "the device is offline",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:46"
            },
            "result": {
              "status": "failed",
              "duration": 122249,
              "error_message": "TypeError: this.deviceRepository.updateDeviceConnectionState is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_operation/command_execution.steps.js:50:31)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 35,
            "name": "a user with \"FACILITY_MANAGER\" role sends a \"setTemperature\" command",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:286"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 36,
            "name": "the system should queue the command for later execution",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:482"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 37,
            "name": "the command status should be \"QUEUED\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:415"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 38,
            "name": "the user should be notified that the device is offline",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:489"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 39,
            "name": "when the device comes online",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution_extensions.steps.js:56"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 40,
            "name": "the system should attempt to execute the queued command",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:496"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 16164499
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 31
          },
          {
            "name": "@context-deviceop",
            "line": 31
          },
          {
            "name": "@persona-facilityman",
            "line": 31
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-command-execution;service-technician-runs-diagnostic-command",
        "keyword": "Scenario",
        "line": 43,
        "name": "Service technician runs diagnostic command",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 251437500
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 44,
            "name": "a registered water heater device with ID \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 87374
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 45,
            "name": "the device supports diagnostic commands",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:57"
            },
            "result": {
              "status": "failed",
              "duration": 150083,
              "error_message": "TypeError: this.deviceRepository.addDeviceCapability is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_operation/command_execution.steps.js:64:33)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 46,
            "name": "a user with \"SERVICE_TECHNICIAN\" role sends a \"runDiagnostic\" command",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:286"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 47,
            "name": "the system should successfully dispatch the command",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:407"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 48,
            "name": "the diagnostic results should be returned",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:510"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 49,
            "name": "the results should include component status information",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:517"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 50,
            "name": "the diagnostic execution should be logged in the maintenance record",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:532"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 30708625
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 42
          },
          {
            "name": "@context-deviceop",
            "line": 42
          },
          {
            "name": "@persona-technician",
            "line": 42
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-command-execution;execute-capability-based-command-across-different-device-types",
        "keyword": "Scenario",
        "line": 53,
        "name": "Execute capability-based command across different device types",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 276114832
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "deviceId",
                      "type"
                    ]
                  },
                  {
                    "cells": [
                      "water-heater-123",
                      "water-heater"
                    ]
                  },
                  {
                    "cells": [
                      "vending-machine-456",
                      "vending-machine"
                    ]
                  },
                  {
                    "cells": [
                      "hvac-unit-789",
                      "hvac"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Given ",
            "line": 54,
            "name": "the following registered devices with \"TEMPERATURE_CONTROL\" capability:",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:75"
            },
            "result": {
              "status": "failed",
              "duration": 419959,
              "error_message": "TypeError: this.deviceRepository.updateDeviceConnectionState is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_operation/command_execution.steps.js:105:33)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 59,
            "name": "a user with \"FACILITY_MANAGER\" role sends a batch \"setTemperature\" command",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 60,
            "name": "provides a parameter \"temperature\" with value \"68\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:305"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 61,
            "name": "the system should adapt the command for each device type",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:548"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 62,
            "name": "it should apply appropriate unit conversions",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:559"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 63,
            "name": "each device should receive a properly formatted command",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:567"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 64,
            "name": "the commands should be executed in parallel",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:590"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 65,
            "name": "the system should report individual command status for each device",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:598"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 19365916
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 52
          },
          {
            "name": "@device-agnostic",
            "line": 52
          },
          {
            "name": "@context-deviceop",
            "line": 52
          },
          {
            "name": "@persona-facilityman",
            "line": 52
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-command-execution;ai-recommended-command-sequence-optimization",
        "keyword": "Scenario",
        "line": 68,
        "name": "AI-recommended command sequence optimization",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 235314291
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 69,
            "name": "a facility with multiple connected devices",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 70,
            "name": "the devices have interdependent operations",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:113"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 71,
            "name": "a user requests to optimize system operation",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:380"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 72,
            "name": "the AI should analyze the operational dependencies",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:608"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 73,
            "name": "it should generate an optimal command sequence",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:618"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 74,
            "name": "the sequence should minimize energy consumption",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:634"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 75,
            "name": "the sequence should maintain required performance levels",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:647"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 76,
            "name": "the system should execute the commands in the recommended sequence",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:655"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 77,
            "name": "it should monitor the effects and adjust if necessary",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:674"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 32055292
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 67
          },
          {
            "name": "@device-agnostic",
            "line": 67
          },
          {
            "name": "@context-deviceop",
            "line": 67
          },
          {
            "name": "@ai-capability",
            "line": 67
          },
          {
            "name": "@persona-facilityman",
            "line": 67
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-command-execution;learning-command-patterns-for-automated-routines",
        "keyword": "Scenario",
        "line": 80,
        "name": "Learning command patterns for automated routines",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 253342167
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 81,
            "name": "a facility with established operational patterns",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:147"
            },
            "result": {
              "status": "failed",
              "duration": 242084,
              "error_message": "Error: Need devices to establish operational patterns\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_operation/command_execution.steps.js:151:11)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 82,
            "name": "command history for the past 30 days",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:267"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 83,
            "name": "the system analyzes command patterns",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:392"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 84,
            "name": "it should identify recurring command sequences",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:681"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "timeOfDay",
                      "Commands typically executed at specific times"
                    ]
                  },
                  {
                    "cells": [
                      "dayOfWeek",
                      "Commands typically executed on specific days"
                    ]
                  },
                  {
                    "cells": [
                      "externalConditions",
                      "Commands correlated with external factors"
                    ]
                  },
                  {
                    "cells": [
                      "userRoles",
                      "Commands typically executed by specific roles"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 85,
            "name": "it should suggest automated routines based on:",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:689"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "commandSequence",
                      "The commands to be executed automatically"
                    ]
                  },
                  {
                    "cells": [
                      "triggerConditions",
                      "When the routine should be executed"
                    ]
                  },
                  {
                    "cells": [
                      "expectedOutcomes",
                      "What the routine is expected to achieve"
                    ]
                  },
                  {
                    "cells": [
                      "overrideOptions",
                      "How users can override if necessary"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 90,
            "name": "for each suggested routine, it should provide:",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/command_execution.steps.js:725"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 42360834
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 79
          },
          {
            "name": "@device-agnostic",
            "line": 79
          },
          {
            "name": "@context-deviceop",
            "line": 79
          },
          {
            "name": "@ai-learning",
            "line": 79
          },
          {
            "name": "@persona-sysadmin",
            "line": 79
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "device-command-execution",
    "line": 1,
    "keyword": "Feature",
    "name": "Device Command Execution",
    "tags": [],
    "uri": "tests/behavior/features/device_operation/command_execution.feature"
  },
  {
    "description": "  As a User of the IoTSphere platform\n  I want to monitor telemetry data from devices\n  So that I can understand their current state and performance",
    "elements": [
      {
        "description": "",
        "id": "device-telemetry-monitoring;view-current-telemetry-from-a-water-heater",
        "keyword": "Scenario",
        "line": 7,
        "name": "View current telemetry from a water heater",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 284021708
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 8,
            "name": "a registered water heater device with ID \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 88625
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 9,
            "name": "the device is reporting telemetry data",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:35"
            },
            "result": {
              "status": "passed",
              "duration": 134083
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 10,
            "name": "a user with \"FACILITY_MANAGER\" role requests current telemetry",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:159"
            },
            "result": {
              "status": "passed",
              "duration": 73333
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "temperature",
                      "numeric",
                      "The current water temperature"
                    ]
                  },
                  {
                    "cells": [
                      "pressure",
                      "numeric",
                      "The current water pressure"
                    ]
                  },
                  {
                    "cells": [
                      "energyConsumed",
                      "numeric",
                      "Energy consumed since last reset"
                    ]
                  },
                  {
                    "cells": [
                      "mode",
                      "string",
                      "The current operational mode"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 11,
            "name": "the system should return the following telemetry data:",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:283"
            },
            "result": {
              "status": "failed",
              "duration": 269457,
              "error_message": "AssertionError: expected [ { temperature: 120, …(5) } ] to have property 'pressure'\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:291:31)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 16,
            "name": "all telemetry values should have timestamps",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:301"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 17,
            "name": "all telemetry values should have appropriate units of measurement",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:308"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 16436291
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 6
          },
          {
            "name": "@context-deviceop",
            "line": 6
          },
          {
            "name": "@persona-facilityman",
            "line": 6
          },
          {
            "name": "@smoke",
            "line": 6
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-telemetry-monitoring;view-historical-telemetry-for-a-water-heater",
        "keyword": "Scenario",
        "line": 20,
        "name": "View historical telemetry for a water heater",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 250539167
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 21,
            "name": "a registered water heater device with ID \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 84374
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 22,
            "name": "the device has been reporting telemetry for \"24 hours\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:54"
            },
            "result": {
              "status": "failed",
              "duration": 515917,
              "error_message": "AssertionError\n    + expected - actual\n\n    -3\n    +24\n\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:89:35)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 23,
            "name": "a user with \"SERVICE_TECHNICIAN\" role requests historical telemetry",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:175"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "specifies a time range of \"last 24 hours\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:183"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 25,
            "name": "selects \"temperature\" as the telemetry type",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:202"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 26,
            "name": "the system should return temperature readings for the specified time period",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:318"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 27,
            "name": "the data should be presented in chronological order",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:331"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 28,
            "name": "the data should include at least 12 data points",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:342"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 29,
            "name": "all data points should have valid timestamps",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:347"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 30,
            "name": "all temperature values should be within the range of 100-140°F",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:357"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 29490833
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 19
          },
          {
            "name": "@context-deviceop",
            "line": 19
          },
          {
            "name": "@persona-technician",
            "line": 19
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-telemetry-monitoring;end-user-views-basic-telemetry-for-their-water-heater",
        "keyword": "Scenario",
        "line": 33,
        "name": "End user views basic telemetry for their water heater",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 250454457
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 34,
            "name": "an end user with access to device \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:92"
            },
            "result": {
              "status": "failed",
              "duration": 142625,
              "error_message": "TypeError: this.userService.createUser is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:94:39)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 35,
            "name": "the device is reporting telemetry data",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:35"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 36,
            "name": "the user views the device dashboard",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:221"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 37,
            "name": "they should see the current temperature",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:366"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 38,
            "name": "they should see the current operational mode",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:373"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "But ",
            "line": 39,
            "name": "they should not see detailed pressure readings",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:380"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 40,
            "name": "they should not see detailed energy consumption data",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:387"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 33759625
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 32
          },
          {
            "name": "@context-deviceop",
            "line": 32
          },
          {
            "name": "@persona-enduser",
            "line": 32
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-telemetry-monitoring;view-standardized-telemetry-across-different-device-types",
        "keyword": "Scenario",
        "line": 43,
        "name": "View standardized telemetry across different device types",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 264836916
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "deviceId",
                      "type"
                    ]
                  },
                  {
                    "cells": [
                      "water-heater-123",
                      "water-heater"
                    ]
                  },
                  {
                    "cells": [
                      "vending-machine-456",
                      "vending-machine"
                    ]
                  },
                  {
                    "cells": [
                      "hvac-unit-789",
                      "hvac"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Given ",
            "line": 44,
            "name": "the following registered devices:",
            "match": {
              "location": "tests/behavior/step_definitions/device_management/manufacturer_agnostic_api.steps.js:164"
            },
            "result": {
              "status": "passed",
              "duration": 140915
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 49,
            "name": "a user with \"FACILITY_MANAGER\" role views the unified dashboard",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 50,
            "name": "the system should show standardized energy consumption for all devices",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 51,
            "name": "the system should show standardized temperature readings for all devices",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 52,
            "name": "the telemetry should be normalized to consistent units",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 53,
            "name": "the telemetry should be displayed with device-appropriate visualizations",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 30040832
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 42
          },
          {
            "name": "@device-agnostic",
            "line": 42
          },
          {
            "name": "@context-deviceop",
            "line": 42
          },
          {
            "name": "@persona-facilityman",
            "line": 42
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-telemetry-monitoring;view-anomaly-detection-for-water-heater-telemetry",
        "keyword": "Scenario",
        "line": 56,
        "name": "View anomaly detection for water heater telemetry",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 251882332
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 57,
            "name": "a registered water heater device with ID \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 78333
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 58,
            "name": "the device is reporting telemetry data",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:35"
            },
            "result": {
              "status": "passed",
              "duration": 54750
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 59,
            "name": "the device has a temperature spike to \"175°F\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:105"
            },
            "result": {
              "status": "passed",
              "duration": 110333
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 60,
            "name": "the system processes the incoming telemetry",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:238"
            },
            "result": {
              "status": "passed",
              "duration": 58375
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 61,
            "name": "it should detect an anomaly in the temperature readings",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:399"
            },
            "result": {
              "status": "failed",
              "duration": 62583,
              "error_message": "AssertionError: Target cannot be null or undefined.\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:402:26)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 62,
            "name": "it should calculate the deviation from normal operation",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:410"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 63,
            "name": "it should generate an alert for the facility manager",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:418"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 64,
            "name": "the alert should include the anomaly type, severity, and timestamp",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:432"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 17733915
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 55
          },
          {
            "name": "@ai-capability",
            "line": 55
          },
          {
            "name": "@context-deviceop",
            "line": 55
          },
          {
            "name": "@persona-facilityman",
            "line": 55
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-telemetry-monitoring;detect-patterns-across-multiple-devices",
        "keyword": "Scenario",
        "line": 67,
        "name": "Detect patterns across multiple devices",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 300437083
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 68,
            "name": "a group of 5 water heaters in the same facility",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:121"
            },
            "result": {
              "status": "passed",
              "duration": 232834
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 69,
            "name": "all devices are reporting telemetry data",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 70,
            "name": "3 of the water heaters show increased energy consumption",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:250"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 71,
            "name": "the system should detect the cross-device consumption pattern",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:441"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 72,
            "name": "it should analyze environmental and usage factors",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:455"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 73,
            "name": "it should determine if the pattern indicates a systemic issue",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:463"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 74,
            "name": "it should generate an insight with a confidence score",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:471"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 29162124
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 66
          },
          {
            "name": "@ai-capability",
            "line": 66
          },
          {
            "name": "@context-deviceop",
            "line": 66
          },
          {
            "name": "@ai-cross-device",
            "line": 66
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "device-telemetry-monitoring",
    "line": 1,
    "keyword": "Feature",
    "name": "Device Telemetry Monitoring",
    "tags": [],
    "uri": "tests/behavior/features/device_operation/telemetry_monitoring.feature"
  },
  {
    "description": "  As an Energy Manager or Facility Manager\n  I want to monitor and optimize energy consumption of devices\n  So that I can reduce operational costs and environmental impact",
    "elements": [
      {
        "description": "",
        "id": "energy-consumption-monitoring-and-optimization;monitor-energy-consumption-for-a-water-heater",
        "keyword": "Scenario",
        "line": 7,
        "name": "Monitor energy consumption for a water heater",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 268813542
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 8,
            "name": "a registered water heater device with ID \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 89708
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 9,
            "name": "the device has been reporting energy consumption data",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 4560124
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 10,
            "name": "a user with \"ENERGY_MANAGER\" role views the energy dashboard",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:287"
            },
            "result": {
              "status": "passed",
              "duration": 237083
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "dailyConsumption",
                      "Energy consumed in the last 24 hours"
                    ]
                  },
                  {
                    "cells": [
                      "weeklyConsumption",
                      "Energy consumed in the last 7 days"
                    ]
                  },
                  {
                    "cells": [
                      "monthlyConsumption",
                      "Energy consumed in the last 30 days"
                    ]
                  },
                  {
                    "cells": [
                      "costEstimate",
                      "Estimated cost based on energy rates"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 11,
            "name": "the system should display:",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:430"
            },
            "result": {
              "status": "failed",
              "duration": 169166,
              "error_message": "AssertionError: Target cannot be null or undefined.\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:438:31)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 16,
            "name": "consumption data should be displayed with appropriate visualizations",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:442"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 17,
            "name": "historical trends should be visible",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:450"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 52753542
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 6
          },
          {
            "name": "@context-energy",
            "line": 6
          },
          {
            "name": "@persona-energyman",
            "line": 6
          },
          {
            "name": "@smoke",
            "line": 6
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "energy-consumption-monitoring-and-optimization;compare-energy-consumption-across-multiple-water-heaters",
        "keyword": "Scenario",
        "line": 20,
        "name": "Compare energy consumption across multiple water heaters",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 273343583
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 21,
            "name": "a facility with 5 registered water heaters",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:56"
            },
            "result": {
              "status": "failed",
              "duration": 277583,
              "error_message": "TypeError: this.telemetryService.addDailyEnergyData is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:99:35)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 22,
            "name": "all devices have been reporting energy consumption data",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:108"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 23,
            "name": "a user with \"FACILITY_MANAGER\" role views the energy comparison report",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:303"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 24,
            "name": "the system should rank devices by energy efficiency",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:460"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 25,
            "name": "it should calculate the average consumption per device",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:475"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 26,
            "name": "it should identify the most and least efficient devices",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:482"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 27,
            "name": "it should provide comparative visualizations",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:497"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 30871457
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 19
          },
          {
            "name": "@context-energy",
            "line": 19
          },
          {
            "name": "@persona-facilityman",
            "line": 19
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "energy-consumption-monitoring-and-optimization;end-user-views-energy-consumption-for-their-water-heater",
        "keyword": "Scenario",
        "line": 30,
        "name": "End user views energy consumption for their water heater",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 277208625
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 31,
            "name": "an end user with access to device \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:92"
            },
            "result": {
              "status": "failed",
              "duration": 145500,
              "error_message": "TypeError: this.userService.createUser is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:94:39)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 32,
            "name": "the user views the energy section of their dashboard",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:319"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 33,
            "name": "they should see their current month's energy consumption",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:505"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 34,
            "name": "they should see a comparison to typical usage",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:512"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 35,
            "name": "they should see estimated cost information",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:521"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 36,
            "name": "they should see energy-saving recommendations",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:528"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 23126792
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 29
          },
          {
            "name": "@context-energy",
            "line": 29
          },
          {
            "name": "@persona-enduser",
            "line": 29
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "energy-consumption-monitoring-and-optimization;receive-energy-optimization-recommendations-for-a-water-heater",
        "keyword": "Scenario",
        "line": 39,
        "name": "Receive energy optimization recommendations for a water heater",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 284618583
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 40,
            "name": "a registered water heater device with ID \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 85291
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 41,
            "name": "the device has 3 months of energy consumption history",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:122"
            },
            "result": {
              "status": "failed",
              "duration": 195666,
              "error_message": "TypeError: this.telemetryService.addDailyEnergyData is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:158:33)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 42,
            "name": "a user with \"ENERGY_MANAGER\" role requests optimization recommendations",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:336"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 43,
            "name": "the system should provide specific energy-saving recommendations",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:536"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "title",
                      "Clear description of the recommendation"
                    ]
                  },
                  {
                    "cells": [
                      "potentialSavings",
                      "Estimated energy/cost savings"
                    ]
                  },
                  {
                    "cells": [
                      "implementation",
                      "Difficulty of implementing the change"
                    ]
                  },
                  {
                    "cells": [
                      "roi",
                      "Estimated return on investment period"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 44,
            "name": "each recommendation should include:",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:544"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 49,
            "name": "recommendations should be ordered by potential impact",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:556"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 22154541
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 38
          },
          {
            "name": "@context-energy",
            "line": 38
          },
          {
            "name": "@ai-capability",
            "line": 38
          },
          {
            "name": "@persona-energyman",
            "line": 38
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "energy-consumption-monitoring-and-optimization;optimize-energy-usage-across-multiple-device-types",
        "keyword": "Scenario",
        "line": 52,
        "name": "Optimize energy usage across multiple device types",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 242783125
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "deviceId",
                      "type"
                    ]
                  },
                  {
                    "cells": [
                      "water-heater-123",
                      "water-heater"
                    ]
                  },
                  {
                    "cells": [
                      "vending-machine-456",
                      "vending-machine"
                    ]
                  },
                  {
                    "cells": [
                      "hvac-unit-789",
                      "hvac"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Given ",
            "line": 53,
            "name": "a facility with diverse device types:",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:170"
            },
            "result": {
              "status": "failed",
              "duration": 267583,
              "error_message": "TypeError: this.telemetryService.addDailyEnergyData is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:220:35)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 58,
            "name": "the energy optimization system analyzes consumption patterns",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:352"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 59,
            "name": "it should identify cross-device optimization opportunities",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:567"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 60,
            "name": "it should recommend load balancing strategies",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:575"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 61,
            "name": "it should suggest optimal operational schedules",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:583"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 62,
            "name": "it should calculate facility-wide potential savings",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:592"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 63,
            "name": "it should prioritize recommendations by impact and ease of implementation",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:602"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 17463541
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 51
          },
          {
            "name": "@device-agnostic",
            "line": 51
          },
          {
            "name": "@context-energy",
            "line": 51
          },
          {
            "name": "@ai-capability",
            "line": 51
          },
          {
            "name": "@ai-cross-device",
            "line": 51
          },
          {
            "name": "@persona-energyman",
            "line": 51
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "energy-consumption-monitoring-and-optimization;generate-energy-efficiency-roi-analysis",
        "keyword": "Scenario",
        "line": 66,
        "name": "Generate energy efficiency ROI analysis",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 265326750
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 67,
            "name": "a facility with historical energy consumption data",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:229"
            },
            "result": {
              "status": "failed",
              "duration": 218750,
              "error_message": "TypeError: this.generateHistoricalEnergyData is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:253:18)"
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "measure",
                      "initialCost",
                      "expectedSavings"
                    ]
                  },
                  {
                    "cells": [
                      "Temperature tune",
                      "$0",
                      "5% per month"
                    ]
                  },
                  {
                    "cells": [
                      "Schedule optimize",
                      "$0",
                      "10% per month"
                    ]
                  },
                  {
                    "cells": [
                      "Insulation",
                      "$500",
                      "15% per month"
                    ]
                  },
                  {
                    "cells": [
                      "Component upgrade",
                      "$1200",
                      "25% per month"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 68,
            "name": "a set of proposed energy optimization measures:",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:270"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 74,
            "name": "the business intelligence system analyzes the measures",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:364"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 75,
            "name": "it should calculate the ROI for each measure",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:617"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 76,
            "name": "it should determine the optimal implementation sequence",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:631"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 77,
            "name": "it should project cumulative savings over 1, 3, and 5 years",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:639"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 78,
            "name": "it should account for energy price trends in projections",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:650"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 79,
            "name": "it should recommend the measures with the best ROI",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:658"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 29664499
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 65
          },
          {
            "name": "@device-agnostic",
            "line": 65
          },
          {
            "name": "@context-energy",
            "line": 65
          },
          {
            "name": "@ai-capability",
            "line": 65
          },
          {
            "name": "@ai-business-intelligence",
            "line": 65
          },
          {
            "name": "@persona-facilityman",
            "line": 65
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "energy-consumption-monitoring-and-optimization;self-optimizing-energy-efficiency-algorithms",
        "keyword": "Scenario",
        "line": 82,
        "name": "Self-optimizing energy efficiency algorithms",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 302338792
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 83,
            "name": "a facility with energy optimization recommendations implemented",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 84,
            "name": "actual savings have been measured for each recommendation",
            "result": {
              "status": "undefined",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 85,
            "name": "the system compares predicted vs. actual savings",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:381"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 86,
            "name": "it should adjust its prediction models to improve accuracy",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:509"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 87,
            "name": "it should refine future recommendations based on actual results",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:674"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 88,
            "name": "it should identify patterns in recommendation effectiveness",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:681"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 89,
            "name": "it should generate an optimization strategy that maximizes proven results",
            "match": {
              "location": "tests/behavior/step_definitions/energy_management/energy_optimization.steps.js:689"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 24852207
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 81
          },
          {
            "name": "@device-agnostic",
            "line": 81
          },
          {
            "name": "@context-energy",
            "line": 81
          },
          {
            "name": "@ai-capability",
            "line": 81
          },
          {
            "name": "@ai-learning",
            "line": 81
          },
          {
            "name": "@persona-energyman",
            "line": 81
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "energy-consumption-monitoring-and-optimization",
    "line": 1,
    "keyword": "Feature",
    "name": "Energy Consumption Monitoring and Optimization",
    "tags": [],
    "uri": "tests/behavior/features/energy_management/energy_optimization.feature"
  },
  {
    "description": "  As a Service Technician or Facility Manager\n  I want contextual knowledge and troubleshooting assistance\n  So that I can efficiently resolve issues and maintain devices",
    "elements": [
      {
        "description": "",
        "id": "ai-assisted-knowledge-management-and-troubleshooting;receive-contextual-troubleshooting-assistance",
        "keyword": "Scenario",
        "line": 7,
        "name": "Receive contextual troubleshooting assistance",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 242156374
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 8,
            "name": "a water heater with an error code \"E-41\"",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:14"
            },
            "result": {
              "status": "failed",
              "duration": 191416,
              "error_message": "TypeError: this.deviceRepository.addDeviceErrorCode is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:35:31)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 9,
            "name": "a service technician requests troubleshooting assistance",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:216"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "errorDescription",
                      "What the error code means"
                    ]
                  },
                  {
                    "cells": [
                      "possibleCauses",
                      "Ranked list of potential causes"
                    ]
                  },
                  {
                    "cells": [
                      "diagnosticSteps",
                      "Step-by-step diagnostic procedure"
                    ]
                  },
                  {
                    "cells": [
                      "requiredTools",
                      "Tools needed for diagnosis and repair"
                    ]
                  },
                  {
                    "cells": [
                      "estimatedTimeToFix",
                      "Expected time to complete the repair"
                    ]
                  },
                  {
                    "cells": [
                      "partRequirements",
                      "Parts that might need replacement"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 10,
            "name": "the system should provide:",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:270"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 17,
            "name": "the assistance should be specific to the device model",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:287"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 18,
            "name": "the information should include diagrams or visual guides",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:296"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 19,
            "name": "solutions should be ranked by probability of resolving the issue",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:310"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 29624625
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 6
          },
          {
            "name": "@ai-capability",
            "line": 6
          },
          {
            "name": "@ai-learning",
            "line": 6
          },
          {
            "name": "@persona-technician",
            "line": 6
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "ai-assisted-knowledge-management-and-troubleshooting;ai-learns-from-successful-maintenance-patterns",
        "keyword": "Scenario",
        "line": 22,
        "name": "AI learns from successful maintenance patterns",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 260427208
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 23,
            "name": "multiple service records for similar issues across devices",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:42"
            },
            "result": {
              "status": "failed",
              "duration": 251250,
              "error_message": "TypeError: this.analyticsEngine.addServiceRecord is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:79:34)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "information about which repair approaches were successful",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:90"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 25,
            "name": "the knowledge system processes this historical data",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:228"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 26,
            "name": "it should identify the most effective repair procedures",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:332"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 27,
            "name": "it should update its recommendations based on success rates",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:347"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 28,
            "name": "it should detect patterns in successful troubleshooting approaches",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:360"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 29,
            "name": "future recommendations should prioritize approaches with higher success rates",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:368"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 28094208
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 21
          },
          {
            "name": "@ai-capability",
            "line": 21
          },
          {
            "name": "@ai-learning",
            "line": 21
          },
          {
            "name": "@persona-technician",
            "line": 21
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "ai-assisted-knowledge-management-and-troubleshooting;cross-device-knowledge-application",
        "keyword": "Scenario",
        "line": 32,
        "name": "Cross-device knowledge application",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 279985500
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 33,
            "name": "a new device type is added to the system",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:95"
            },
            "result": {
              "status": "passed",
              "duration": 182832
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 34,
            "name": "it shares capabilities with existing device types",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:117"
            },
            "result": {
              "status": "failed",
              "duration": 85416,
              "error_message": "Error: Device not found: troubleshooting-test-device\n    at Object.getDeviceCapabilities (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/support/mocks/device-repository.mock.js:174:15)\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:125:63)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 35,
            "name": "a user encounters an issue with the new device type",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:240"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 36,
            "name": "the system should apply relevant knowledge from similar capabilities",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:378"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 37,
            "name": "it should adapt troubleshooting procedures from other device types",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:388"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 38,
            "name": "it should identify which aspects are device-specific",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:402"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 39,
            "name": "it should generate appropriate guidance despite limited historical data",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:410"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 19181083
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 31
          },
          {
            "name": "@ai-capability",
            "line": 31
          },
          {
            "name": "@cross-device",
            "line": 31
          },
          {
            "name": "@persona-facilityman",
            "line": 31
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "ai-assisted-knowledge-management-and-troubleshooting;capture-and-integrate-field-knowledge",
        "keyword": "Scenario",
        "line": 42,
        "name": "Capture and integrate field knowledge",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 247393457
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 43,
            "name": "a service technician resolves an unusual issue",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:14"
            },
            "result": {
              "status": "failed",
              "duration": 295583,
              "error_message": "TypeError: this.deviceRepository.addDeviceErrorCode is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:36:31)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 44,
            "name": "they document their solution in the system",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:145"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "extractKeyInsights",
                      "Identify the key troubleshooting steps"
                    ]
                  },
                  {
                    "cells": [
                      "categorizeKnowledge",
                      "Associate with specific error conditions"
                    ]
                  },
                  {
                    "cells": [
                      "validateApproach",
                      "Compare with existing knowledge"
                    ]
                  },
                  {
                    "cells": [
                      "integrateKnowledge",
                      "Add to the knowledge base"
                    ]
                  },
                  {
                    "cells": [
                      "creditContributor",
                      "Record who provided the knowledge"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 45,
            "name": "the knowledge management system should:",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:182"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 51,
            "name": "the new knowledge should be available for future similar issues",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:200"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 52,
            "name": "other technicians should benefit from the captured expertise",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:234"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 17517458
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 41
          },
          {
            "name": "@ai-capability",
            "line": 41
          },
          {
            "name": "@ai-learning",
            "line": 41
          },
          {
            "name": "@persona-technician",
            "line": 41
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "ai-assisted-knowledge-management-and-troubleshooting;predictive-troubleshooting-guidance",
        "keyword": "Scenario",
        "line": 55,
        "name": "Predictive troubleshooting guidance",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 314796999
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 56,
            "name": "a device with unusual telemetry patterns",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:135"
            },
            "result": {
              "status": "failed",
              "duration": 3965875,
              "error_message": "AssertionError\n    + expected - actual\n\n    -3\n    +30\n\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:210:34)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 57,
            "name": "the predictive maintenance system detects a developing issue",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:255"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 58,
            "name": "it should proactively generate troubleshooting guidance",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:419"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 59,
            "name": "the guidance should address the specific emerging issue",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:429"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 60,
            "name": "it should include preventative steps to avoid failure",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:437"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 61,
            "name": "it should estimate the urgency of intervention",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:445"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 62,
            "name": "it should recommend optimal timing for maintenance",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:455"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 63,
            "name": "it should estimate resource requirements for resolution",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/troubleshooting_assistance.steps.js:464"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 26945500
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 54
          },
          {
            "name": "@ai-capability",
            "line": 54
          },
          {
            "name": "@ai-learning",
            "line": 54
          },
          {
            "name": "@persona-technician",
            "line": 54
          },
          {
            "name": "@persona-facilityman",
            "line": 54
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "ai-assisted-knowledge-management-and-troubleshooting;knowledge-based-operational-improvements",
        "keyword": "Scenario",
        "line": 66,
        "name": "Knowledge-based operational improvements",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 251902166
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 67,
            "name": "accumulated knowledge about device operations and maintenance",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:59"
            },
            "result": {
              "status": "failed",
              "duration": 387665,
              "error_message": "AssertionError\n    + expected - actual\n\n    -9\n    +5\n\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:139:29)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 68,
            "name": "the business intelligence system analyzes this knowledge",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:169"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "trainingOpportunities",
                      "Areas where staff training could help"
                    ]
                  },
                  {
                    "cells": [
                      "processImprovements",
                      "Maintenance processes that could be improved"
                    ]
                  },
                  {
                    "cells": [
                      "commonIssues",
                      "Frequently occurring problems to address"
                    ]
                  },
                  {
                    "cells": [
                      "bestPractices",
                      "Operational practices to implement"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 69,
            "name": "it should identify opportunities for operational improvements such as:",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:249"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 74,
            "name": "each improvement should include an estimated impact",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:269"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 75,
            "name": "implementation guidance should be provided",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:284"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 76,
            "name": "training materials should be automatically suggested",
            "match": {
              "location": "tests/behavior/step_definitions/knowledge_management/knowledge_capture.steps.js:299"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 30686708
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 65
          },
          {
            "name": "@ai-capability",
            "line": 65
          },
          {
            "name": "@ai-business-intelligence",
            "line": 65
          },
          {
            "name": "@persona-facilityman",
            "line": 65
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "ai-assisted-knowledge-management-and-troubleshooting",
    "line": 1,
    "keyword": "Feature",
    "name": "AI-Assisted Knowledge Management and Troubleshooting",
    "tags": [],
    "uri": "tests/behavior/features/knowledge_management/contextual_assistance.feature"
  },
  {
    "description": "  As a Facility Manager or Service Technician\n  I want to predict maintenance needs and assess device health\n  So that I can prevent failures and optimize maintenance schedules",
    "elements": [
      {
        "description": "",
        "id": "predictive-maintenance-and-health-assessment;generate-health-assessment-for-a-water-heater",
        "keyword": "Scenario",
        "line": 7,
        "name": "Generate health assessment for a water heater",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 279028042
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 8,
            "name": "a registered water heater device with ID \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 106166
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 9,
            "name": "the device has 3 months of operational history",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 165207
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 10,
            "name": "a user with \"FACILITY_MANAGER\" role requests a health assessment",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:296"
            },
            "result": {
              "status": "passed",
              "duration": 101042
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "overallScore",
                      "A numeric score between 0-100"
                    ]
                  },
                  {
                    "cells": [
                      "componentScores",
                      "Individual scores for key components"
                    ]
                  },
                  {
                    "cells": [
                      "estimatedLifespan",
                      "Predicted remaining useful life"
                    ]
                  },
                  {
                    "cells": [
                      "confidenceLevel",
                      "Confidence score for the prediction"
                    ]
                  }
                ]
              }
            ],
            "keyword": "Then ",
            "line": 11,
            "name": "the system should generate a health assessment with:",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:374"
            },
            "result": {
              "status": "failed",
              "duration": 115791,
              "error_message": "AssertionError: Target cannot be null or undefined.\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:382:32)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 16,
            "name": "the assessment should be based on actual operational data",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:397"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 17,
            "name": "the results should be displayed with appropriate visualizations",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:405"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 20311582
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 6
          },
          {
            "name": "@context-maintenance",
            "line": 6
          },
          {
            "name": "@ai-capability",
            "line": 6
          },
          {
            "name": "@ai-predictive",
            "line": 6
          },
          {
            "name": "@persona-facilityman",
            "line": 6
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "predictive-maintenance-and-health-assessment;predict-water-heater-component-failures",
        "keyword": "Scenario",
        "line": 20,
        "name": "Predict water heater component failures",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 251817957
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 21,
            "name": "a registered water heater device with ID \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 90000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 22,
            "name": "the device has shown increasing temperature fluctuations",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:35"
            },
            "result": {
              "status": "failed",
              "duration": 662791,
              "error_message": "AssertionError\n    + expected - actual\n\n    -3\n    +40\n\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:74:35)"
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 23,
            "name": "the predictive maintenance system analyzes the device",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:312"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 24,
            "name": "it should identify potential heating element failure",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:413"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 25,
            "name": "it should predict when the failure is likely to occur",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:427"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 26,
            "name": "it should specify the confidence level of the prediction",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:438"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 27,
            "name": "it should recommend preventative maintenance actions",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:450"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 31790083
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 19
          },
          {
            "name": "@context-maintenance",
            "line": 19
          },
          {
            "name": "@ai-capability",
            "line": 19
          },
          {
            "name": "@ai-predictive",
            "line": 19
          },
          {
            "name": "@persona-technician",
            "line": 19
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "predictive-maintenance-and-health-assessment;view-maintenance-recommendations-for-a-water-heater",
        "keyword": "Scenario",
        "line": 30,
        "name": "View maintenance recommendations for a water heater",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 276559958
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 31,
            "name": "a registered water heater device with ID \"water-heater-123\"",
            "match": {
              "location": "tests/behavior/step_definitions/device_operation/telemetry_monitoring.steps.js:14"
            },
            "result": {
              "status": "passed",
              "duration": 91624
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 32,
            "name": "the device has a health assessment with a score of \"65\"",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:77"
            },
            "result": {
              "status": "passed",
              "duration": 11593625
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 33,
            "name": "a user with \"FACILITY_MANAGER\" role views maintenance recommendations",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:324"
            },
            "result": {
              "status": "passed",
              "duration": 2419790
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 34,
            "name": "the system should provide specific maintenance actions",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:458"
            },
            "result": {
              "status": "passed",
              "duration": 276791
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "priority",
                      "The urgency of the maintenance"
                    ]
                  },
                  {
                    "cells": [
                      "timeframe",
                      "Recommended timeframe for action"
                    ]
                  },
                  {
                    "cells": [
                      "estimatedCost",
                      "Projected cost of the maintenance"
                    ]
                  },
                  {
                    "cells": [
                      "potentialImpact",
                      "Impact of performing or skipping maintenance"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 35,
            "name": "each maintenance recommendation should include:",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:473"
            },
            "result": {
              "status": "passed",
              "duration": 220250
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 40,
            "name": "recommendations should be ordered by priority",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:485"
            },
            "result": {
              "status": "passed",
              "duration": 215416
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 11154667
            }
          }
        ],
        "tags": [
          {
            "name": "@current",
            "line": 29
          },
          {
            "name": "@context-maintenance",
            "line": 29
          },
          {
            "name": "@ai-capability",
            "line": 29
          },
          {
            "name": "@persona-facilityman",
            "line": 29
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "predictive-maintenance-and-health-assessment;self-improving-maintenance-predictions",
        "keyword": "Scenario",
        "line": 43,
        "name": "Self-improving maintenance predictions",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 262315124
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 44,
            "name": "multiple water heaters with completed maintenance records",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:105"
            },
            "result": {
              "status": "failed",
              "duration": 315707,
              "error_message": "TypeError: this.analyticsEngine.addMaintenancePrediction is not a function\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:170:34)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 45,
            "name": "previous predictions exist for each maintenance event",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:179"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 46,
            "name": "the system analyzes prediction accuracy against actual outcomes",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:340"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 47,
            "name": "it should adjust its prediction models to improve accuracy",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:509"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "previousAccuracy",
                      "Accuracy before model adjustment"
                    ]
                  },
                  {
                    "cells": [
                      "newAccuracy",
                      "Accuracy after model adjustment"
                    ]
                  },
                  {
                    "cells": [
                      "improvementRate",
                      "Percentage improvement in accuracy"
                    ]
                  },
                  {
                    "cells": [
                      "keyFactors",
                      "Factors that improved model performance"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 48,
            "name": "it should generate a model improvement report showing:",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:517"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 53,
            "name": "subsequent predictions should demonstrate improved accuracy",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:536"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 30096417
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 42
          },
          {
            "name": "@device-agnostic",
            "line": 42
          },
          {
            "name": "@context-maintenance",
            "line": 42
          },
          {
            "name": "@ai-capability",
            "line": 42
          },
          {
            "name": "@ai-learning",
            "line": 42
          },
          {
            "name": "@persona-technician",
            "line": 42
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "predictive-maintenance-and-health-assessment;calculate-roi-for-maintenance-strategies",
        "keyword": "Scenario",
        "line": 56,
        "name": "Calculate ROI for maintenance strategies",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 251694000
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 57,
            "name": "a facility with multiple devices of the same type",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:190"
            },
            "result": {
              "status": "passed",
              "duration": 487583
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 58,
            "name": "some devices follow preventive maintenance schedules",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:283"
            },
            "result": {
              "status": "passed",
              "duration": 40834
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 59,
            "name": "others follow reactive maintenance approaches",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:288"
            },
            "result": {
              "status": "passed",
              "duration": 28124
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 60,
            "name": "the business intelligence system compares maintenance outcomes",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:353"
            },
            "result": {
              "status": "passed",
              "duration": 96292
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 61,
            "name": "it should calculate the ROI of preventive vs. reactive maintenance",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:544"
            },
            "result": {
              "status": "passed",
              "duration": 101415
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "preventiveCosts",
                      "Total costs of preventive maintenance"
                    ]
                  },
                  {
                    "cells": [
                      "reactiveCosts",
                      "Total costs of reactive maintenance"
                    ]
                  },
                  {
                    "cells": [
                      "downtimeComparison",
                      "Comparison of device downtime"
                    ]
                  },
                  {
                    "cells": [
                      "reliabilityImpact",
                      "Impact on overall device reliability"
                    ]
                  },
                  {
                    "cells": [
                      "projectedSavings",
                      "Projected savings from optimal strategy"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 62,
            "name": "it should quantify:",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:553"
            },
            "result": {
              "status": "passed",
              "duration": 87750
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 68,
            "name": "it should recommend the most cost-effective maintenance strategy",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:563"
            },
            "result": {
              "status": "failed",
              "duration": 173291,
              "error_message": "AssertionError: expected [ 'PREVENTIVE', 'REACTIVE', 'HYBRID' ] to include 'Preventive maintenance with condition…'\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/tests/behavior/step_definitions/maintenance/predictive_maintenance.steps.js:568:51)"
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 32585583
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 55
          },
          {
            "name": "@device-agnostic",
            "line": 55
          },
          {
            "name": "@context-maintenance",
            "line": 55
          },
          {
            "name": "@ai-capability",
            "line": 55
          },
          {
            "name": "@ai-business-intelligence",
            "line": 55
          },
          {
            "name": "@persona-facilityman",
            "line": 55
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "predictive-maintenance-and-health-assessment;coordinate-maintenance-across-multiple-device-types",
        "keyword": "Scenario",
        "line": 71,
        "name": "Coordinate maintenance across multiple device types",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 289234333
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 72,
            "name": "a facility with diverse device types",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/device_orchestration.steps.js:14"
            },
            "result": {
              "status": "pending",
              "duration": 121708
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 73,
            "name": "multiple devices require maintenance in the next month",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/device_orchestration.steps.js:60"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 74,
            "name": "the maintenance orchestration system analyzes the requirements",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/device_orchestration.steps.js:82"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 75,
            "name": "it should generate an optimized maintenance schedule",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/device_orchestration.steps.js:127"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "minimizeDowntime",
                      "Group maintenance to reduce facility impact"
                    ]
                  },
                  {
                    "cells": [
                      "optimizeTechnicianTime",
                      "Efficiently use technician availability"
                    ]
                  },
                  {
                    "cells": [
                      "prioritizeCritical",
                      "Address critical issues first"
                    ]
                  },
                  {
                    "cells": [
                      "groupSimilarTasks",
                      "Combine similar maintenance tasks"
                    ]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 76,
            "name": "the schedule should:",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/device_orchestration.steps.js:141"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 81,
            "name": "it should provide a cost-benefit analysis of the optimized schedule",
            "match": {
              "location": "tests/behavior/step_definitions/maintenance/device_orchestration.steps.js:173"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 10705208
            }
          }
        ],
        "tags": [
          {
            "name": "@future",
            "line": 70
          },
          {
            "name": "@device-agnostic",
            "line": 70
          },
          {
            "name": "@context-maintenance",
            "line": 70
          },
          {
            "name": "@ai-capability",
            "line": 70
          },
          {
            "name": "@ai-cross-device",
            "line": 70
          },
          {
            "name": "@persona-facilityman",
            "line": 70
          }
        ],
        "type": "scenario"
      }
    ],
    "id": "predictive-maintenance-and-health-assessment",
    "line": 1,
    "keyword": "Feature",
    "name": "Predictive Maintenance and Health Assessment",
    "tags": [],
    "uri": "tests/behavior/features/maintenance/predictive_maintenance.feature"
  },
  {
    "description": "  As an IoTSphere user\n  I want to see device shadow data in the UI\n  So that I can monitor the current state of devices",
    "elements": [
      {
        "description": "",
        "id": "device-shadow-document;view-device-shadow-data-on-details-page",
        "keyword": "Scenario",
        "line": 11,
        "name": "View device shadow data on details page",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 266514209
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "the IoTSphere application is running",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:48"
            },
            "result": {
              "status": "passed",
              "duration": 3711292
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 8,
            "name": "I am logged in as an administrator",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:78"
            },
            "result": {
              "status": "passed",
              "duration": 14567166
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 12,
            "name": "I navigate to the water heater with ID \"wh-test-001\"",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:103"
            },
            "result": {
              "status": "passed",
              "duration": 14290250
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 13,
            "name": "I should see the device shadow information",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:163"
            },
            "result": {
              "status": "passed",
              "duration": 2096749
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 14,
            "name": "the temperature should be displayed",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:168"
            },
            "result": {
              "status": "passed",
              "duration": 3619834
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "the status indicators should reflect current device state",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:176"
            },
            "result": {
              "status": "passed",
              "duration": 2029833
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 10852707
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-shadow-document;view-temperature-history-with-shadow-data",
        "keyword": "Scenario",
        "line": 17,
        "name": "View temperature history with shadow data",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 250810625
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "the IoTSphere application is running",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:48"
            },
            "result": {
              "status": "passed",
              "duration": 24794167
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 8,
            "name": "I am logged in as an administrator",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:78"
            },
            "result": {
              "status": "passed",
              "duration": 71752583
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 18,
            "name": "I navigate to the water heater with ID \"wh-test-001\"",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:103"
            },
            "result": {
              "status": "passed",
              "duration": 40473500
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 19,
            "name": "I click on the History tab",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:136"
            },
            "result": {
              "status": "passed",
              "duration": 80801374
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 20,
            "name": "I should see the temperature history chart",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:195"
            },
            "result": {
              "status": "passed",
              "duration": 1432959
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 21,
            "name": "the chart should display historical temperature data",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:200"
            },
            "result": {
              "status": "passed",
              "duration": 29492500
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 10511875
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "device-shadow-document;show-appropriate-error-when-shadow-document-is-missing",
        "keyword": "Scenario",
        "line": 23,
        "name": "Show appropriate error when shadow document is missing",
        "steps": [
          {
            "keyword": "Before",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 242868707
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "the IoTSphere application is running",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:48"
            },
            "result": {
              "status": "passed",
              "duration": 4316040
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 8,
            "name": "I am logged in as an administrator",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:78"
            },
            "result": {
              "status": "passed",
              "duration": 56790957
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 24,
            "name": "I navigate to the water heater with ID \"wh-missing-shadow\"",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:103"
            },
            "result": {
              "status": "passed",
              "duration": 34988000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 25,
            "name": "I should see an error message about missing shadow document",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:215"
            },
            "result": {
              "status": "passed",
              "duration": 26315249
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 26,
            "name": "the error message should clearly explain the issue",
            "match": {
              "location": "features/step_definitions/shadow_document_steps.js:220"
            },
            "result": {
              "status": "failed",
              "duration": 2441416,
              "error_message": "AssertionError: expected 'No shadow document exists for this de…' to include 'missing'\n    at CustomWorld.<anonymous> (/Users/lisasimon/repos/IoTSphereAngular/IoTSphere-Refactor/features/step_definitions/shadow_document_steps.js:225:24)"
            }
          },
          {
            "keyword": "After",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 10334165
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      }
    ],
    "id": "device-shadow-document",
    "line": 1,
    "keyword": "Feature",
    "name": "Device Shadow Document",
    "tags": [],
    "uri": "features/shadow_document.feature"
  }
]